
LCD_LIBRERIA.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000548  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004f4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000548  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000578  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  000005b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001604  00000000  00000000  00000630  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007a9  00000000  00000000  00001c34  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000755  00000000  00000000  000023dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000114  00000000  00000000  00002b34  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000477  00000000  00000000  00002c48  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a59  00000000  00000000  000030bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00003b18  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 50 02 	call	0x4a0	; 0x4a0 <main>
  78:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <LCD_AVR_Data_Bus>:
	char *ptr;
	ptr = c;
	while(*ptr)
	LCD_AVR_Print_Char(*ptr++);
	
}
  80:	80 ff       	sbrs	r24, 0
  82:	04 c0       	rjmp	.+8      	; 0x8c <LCD_AVR_Data_Bus+0xc>
  84:	95 b1       	in	r25, 0x05	; 5
  86:	94 60       	ori	r25, 0x04	; 4
  88:	95 b9       	out	0x05, r25	; 5
  8a:	03 c0       	rjmp	.+6      	; 0x92 <LCD_AVR_Data_Bus+0x12>
  8c:	95 b1       	in	r25, 0x05	; 5
  8e:	9b 7f       	andi	r25, 0xFB	; 251
  90:	95 b9       	out	0x05, r25	; 5
  92:	81 ff       	sbrs	r24, 1
  94:	04 c0       	rjmp	.+8      	; 0x9e <LCD_AVR_Data_Bus+0x1e>
  96:	95 b1       	in	r25, 0x05	; 5
  98:	98 60       	ori	r25, 0x08	; 8
  9a:	95 b9       	out	0x05, r25	; 5
  9c:	03 c0       	rjmp	.+6      	; 0xa4 <LCD_AVR_Data_Bus+0x24>
  9e:	95 b1       	in	r25, 0x05	; 5
  a0:	97 7f       	andi	r25, 0xF7	; 247
  a2:	95 b9       	out	0x05, r25	; 5
  a4:	82 ff       	sbrs	r24, 2
  a6:	04 c0       	rjmp	.+8      	; 0xb0 <LCD_AVR_Data_Bus+0x30>
  a8:	95 b1       	in	r25, 0x05	; 5
  aa:	90 61       	ori	r25, 0x10	; 16
  ac:	95 b9       	out	0x05, r25	; 5
  ae:	03 c0       	rjmp	.+6      	; 0xb6 <LCD_AVR_Data_Bus+0x36>
  b0:	95 b1       	in	r25, 0x05	; 5
  b2:	9f 7e       	andi	r25, 0xEF	; 239
  b4:	95 b9       	out	0x05, r25	; 5
  b6:	83 ff       	sbrs	r24, 3
  b8:	04 c0       	rjmp	.+8      	; 0xc2 <LCD_AVR_Data_Bus+0x42>
  ba:	85 b1       	in	r24, 0x05	; 5
  bc:	80 62       	ori	r24, 0x20	; 32
  be:	85 b9       	out	0x05, r24	; 5
  c0:	08 95       	ret
  c2:	85 b1       	in	r24, 0x05	; 5
  c4:	8f 7d       	andi	r24, 0xDF	; 223
  c6:	85 b9       	out	0x05, r24	; 5
  c8:	08 95       	ret

000000ca <LCD_AVR_Cmd>:
  ca:	95 b1       	in	r25, 0x05	; 5
  cc:	9e 7f       	andi	r25, 0xFE	; 254
  ce:	95 b9       	out	0x05, r25	; 5
  d0:	95 b1       	in	r25, 0x05	; 5
  d2:	91 60       	ori	r25, 0x01	; 1
  d4:	95 b9       	out	0x05, r25	; 5
  d6:	0e 94 40 00 	call	0x80	; 0x80 <LCD_AVR_Data_Bus>
  da:	8f e9       	ldi	r24, 0x9F	; 159
  dc:	9f e0       	ldi	r25, 0x0F	; 15
  de:	01 97       	sbiw	r24, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <LCD_AVR_Cmd+0x14>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <LCD_AVR_Cmd+0x1a>
  e4:	00 00       	nop
  e6:	85 b1       	in	r24, 0x05	; 5
  e8:	8e 7f       	andi	r24, 0xFE	; 254
  ea:	85 b9       	out	0x05, r24	; 5
  ec:	08 95       	ret

000000ee <LCD_AVR_Init>:
  ee:	84 b1       	in	r24, 0x04	; 4
  f0:	8f 63       	ori	r24, 0x3F	; 63
  f2:	84 b9       	out	0x04, r24	; 4
  f4:	83 e0       	ldi	r24, 0x03	; 3
  f6:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
  fa:	83 e0       	ldi	r24, 0x03	; 3
  fc:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
 100:	83 e0       	ldi	r24, 0x03	; 3
 102:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
 106:	82 e0       	ldi	r24, 0x02	; 2
 108:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
 10c:	82 e0       	ldi	r24, 0x02	; 2
 10e:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
 112:	88 e0       	ldi	r24, 0x08	; 8
 114:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
 118:	80 e0       	ldi	r24, 0x00	; 0
 11a:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
 11e:	88 e0       	ldi	r24, 0x08	; 8
 120:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
 136:	8d e0       	ldi	r24, 0x0D	; 13
 138:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
 13c:	08 95       	ret

0000013e <LCD_AVR_New_Char>:

void LCD_AVR_New_Char(uint8_t a,uint8_t b,uint8_t c,uint8_t d ,uint8_t e ,uint8_t f,uint8_t g,uint8_t h,uint8_t i){
 13e:	8f 92       	push	r8
 140:	af 92       	push	r10
 142:	cf 92       	push	r12
 144:	df 92       	push	r13
 146:	ef 92       	push	r14
 148:	ff 92       	push	r15
 14a:	0f 93       	push	r16
 14c:	1f 93       	push	r17
 14e:	cf 93       	push	r28
 150:	df 93       	push	r29
 152:	cd b7       	in	r28, 0x3d	; 61
 154:	de b7       	in	r29, 0x3e	; 62
 156:	d6 2e       	mov	r13, r22
 158:	14 2f       	mov	r17, r20
 15a:	f2 2e       	mov	r15, r18
	uint8_t m,n;
	switch(a){
 15c:	82 30       	cpi	r24, 0x02	; 2
 15e:	09 f4       	brne	.+2      	; 0x162 <LCD_AVR_New_Char+0x24>
 160:	67 c0       	rjmp	.+206    	; 0x230 <LCD_AVR_New_Char+0xf2>
 162:	18 f4       	brcc	.+6      	; 0x16a <LCD_AVR_New_Char+0x2c>
 164:	81 30       	cpi	r24, 0x01	; 1
 166:	41 f0       	breq	.+16     	; 0x178 <LCD_AVR_New_Char+0x3a>
 168:	7f c1       	rjmp	.+766    	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 16a:	83 30       	cpi	r24, 0x03	; 3
 16c:	09 f4       	brne	.+2      	; 0x170 <LCD_AVR_New_Char+0x32>
 16e:	c5 c0       	rjmp	.+394    	; 0x2fa <LCD_AVR_New_Char+0x1bc>
 170:	84 30       	cpi	r24, 0x04	; 4
 172:	09 f4       	brne	.+2      	; 0x176 <LCD_AVR_New_Char+0x38>
 174:	1e c1       	rjmp	.+572    	; 0x3b2 <LCD_AVR_New_Char+0x274>
 176:	78 c1       	rjmp	.+752    	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
		case 1:
		LCD_AVR_Cmd(0x04);
 178:	84 e0       	ldi	r24, 0x04	; 4
 17a:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(0x10);
 17e:	80 e1       	ldi	r24, 0x10	; 16
 180:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		RS_ON;
 184:	85 b1       	in	r24, 0x05	; 5
 186:	82 60       	ori	r24, 0x02	; 2
 188:	85 b9       	out	0x05, r24	; 5
		m=b>>4;
		n=b;
		LCD_AVR_Cmd(m);
 18a:	8d 2d       	mov	r24, r13
 18c:	82 95       	swap	r24
 18e:	8f 70       	andi	r24, 0x0F	; 15
 190:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 194:	8d 2d       	mov	r24, r13
 196:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=c>>4;
		n=c;
		LCD_AVR_Cmd(m);
 19a:	81 2f       	mov	r24, r17
 19c:	82 95       	swap	r24
 19e:	8f 70       	andi	r24, 0x0F	; 15
 1a0:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 1a4:	81 2f       	mov	r24, r17
 1a6:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=d>>4;
		n=d;
		LCD_AVR_Cmd(m);
 1aa:	8f 2d       	mov	r24, r15
 1ac:	82 95       	swap	r24
 1ae:	8f 70       	andi	r24, 0x0F	; 15
 1b0:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 1b4:	8f 2d       	mov	r24, r15
 1b6:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=e>>4;
		n=e;
		LCD_AVR_Cmd(m);
 1ba:	80 2f       	mov	r24, r16
 1bc:	82 95       	swap	r24
 1be:	8f 70       	andi	r24, 0x0F	; 15
 1c0:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 1c4:	80 2f       	mov	r24, r16
 1c6:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=f>>4;
		n=f;
		LCD_AVR_Cmd(m);
 1ca:	8e 2d       	mov	r24, r14
 1cc:	82 95       	swap	r24
 1ce:	8f 70       	andi	r24, 0x0F	; 15
 1d0:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 1d4:	8e 2d       	mov	r24, r14
 1d6:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=g>>4;
		n=g;
		LCD_AVR_Cmd(m);
 1da:	8c 2d       	mov	r24, r12
 1dc:	82 95       	swap	r24
 1de:	8f 70       	andi	r24, 0x0F	; 15
 1e0:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 1e4:	8c 2d       	mov	r24, r12
 1e6:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=h>>4;
		n=h;
		LCD_AVR_Cmd(m);
 1ea:	8a 2d       	mov	r24, r10
 1ec:	82 95       	swap	r24
 1ee:	8f 70       	andi	r24, 0x0F	; 15
 1f0:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 1f4:	8a 2d       	mov	r24, r10
 1f6:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=i>>4;
		n=i;
		LCD_AVR_Cmd(m);
 1fa:	88 2d       	mov	r24, r8
 1fc:	82 95       	swap	r24
 1fe:	8f 70       	andi	r24, 0x0F	; 15
 200:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 204:	88 2d       	mov	r24, r8
 206:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		RS_OFF;
 20a:	85 b1       	in	r24, 0x05	; 5
 20c:	8d 7f       	andi	r24, 0xFD	; 253
 20e:	85 b9       	out	0x05, r24	; 5
		LCD_AVR_Cmd(0x00);
 210:	80 e0       	ldi	r24, 0x00	; 0
 212:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(0x01);
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 21c:	2f ef       	ldi	r18, 0xFF	; 255
 21e:	80 e7       	ldi	r24, 0x70	; 112
 220:	92 e0       	ldi	r25, 0x02	; 2
 222:	21 50       	subi	r18, 0x01	; 1
 224:	80 40       	sbci	r24, 0x00	; 0
 226:	90 40       	sbci	r25, 0x00	; 0
 228:	e1 f7       	brne	.-8      	; 0x222 <LCD_AVR_New_Char+0xe4>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <LCD_AVR_New_Char+0xee>
 22c:	00 00       	nop
 22e:	1c c1       	rjmp	.+568    	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
		_delay_ms(100);
		break;
		
		case 2:
		LCD_AVR_Cmd(0x01);
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(0x00);
 236:	80 e0       	ldi	r24, 0x00	; 0
 238:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		RS_ON;
 23c:	85 b1       	in	r24, 0x05	; 5
 23e:	82 60       	ori	r24, 0x02	; 2
 240:	85 b9       	out	0x05, r24	; 5
		m=b>>4;
		n=b;
		LCD_AVR_Cmd(m);
 242:	8d 2d       	mov	r24, r13
 244:	82 95       	swap	r24
 246:	8f 70       	andi	r24, 0x0F	; 15
 248:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 24c:	8d 2d       	mov	r24, r13
 24e:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=c>>4;
 252:	d1 2e       	mov	r13, r17
 254:	d6 94       	lsr	r13
 256:	d6 94       	lsr	r13
 258:	d6 94       	lsr	r13
 25a:	d6 94       	lsr	r13
		n=c;
		LCD_AVR_Cmd(m);
 25c:	8d 2d       	mov	r24, r13
 25e:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 262:	81 2f       	mov	r24, r17
 264:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=c>>4;
		n=c;
		LCD_AVR_Cmd(m);
 268:	8d 2d       	mov	r24, r13
 26a:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 26e:	81 2f       	mov	r24, r17
 270:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=d>>4;
		n=d;
		LCD_AVR_Cmd(m);
 274:	8f 2d       	mov	r24, r15
 276:	82 95       	swap	r24
 278:	8f 70       	andi	r24, 0x0F	; 15
 27a:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 27e:	8f 2d       	mov	r24, r15
 280:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=e>>4;
		n=e;
		LCD_AVR_Cmd(m);
 284:	80 2f       	mov	r24, r16
 286:	82 95       	swap	r24
 288:	8f 70       	andi	r24, 0x0F	; 15
 28a:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 28e:	80 2f       	mov	r24, r16
 290:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=f>>4;
		n=f;
		LCD_AVR_Cmd(m);
 294:	8e 2d       	mov	r24, r14
 296:	82 95       	swap	r24
 298:	8f 70       	andi	r24, 0x0F	; 15
 29a:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 29e:	8e 2d       	mov	r24, r14
 2a0:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=g>>4;
		n=g;
		LCD_AVR_Cmd(m);
 2a4:	8c 2d       	mov	r24, r12
 2a6:	82 95       	swap	r24
 2a8:	8f 70       	andi	r24, 0x0F	; 15
 2aa:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 2ae:	8c 2d       	mov	r24, r12
 2b0:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=h>>4;
		n=h;
		LCD_AVR_Cmd(m);
 2b4:	8a 2d       	mov	r24, r10
 2b6:	82 95       	swap	r24
 2b8:	8f 70       	andi	r24, 0x0F	; 15
 2ba:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 2be:	8a 2d       	mov	r24, r10
 2c0:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=i>>4;
		n=i;
		LCD_AVR_Cmd(m);
 2c4:	88 2d       	mov	r24, r8
 2c6:	82 95       	swap	r24
 2c8:	8f 70       	andi	r24, 0x0F	; 15
 2ca:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 2ce:	88 2d       	mov	r24, r8
 2d0:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		RS_OFF;
 2d4:	85 b1       	in	r24, 0x05	; 5
 2d6:	8d 7f       	andi	r24, 0xFD	; 253
 2d8:	85 b9       	out	0x05, r24	; 5
		LCD_AVR_Cmd(0x00);
 2da:	80 e0       	ldi	r24, 0x00	; 0
 2dc:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(0x01);
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
 2e6:	2f ef       	ldi	r18, 0xFF	; 255
 2e8:	80 e7       	ldi	r24, 0x70	; 112
 2ea:	92 e0       	ldi	r25, 0x02	; 2
 2ec:	21 50       	subi	r18, 0x01	; 1
 2ee:	80 40       	sbci	r24, 0x00	; 0
 2f0:	90 40       	sbci	r25, 0x00	; 0
 2f2:	e1 f7       	brne	.-8      	; 0x2ec <LCD_AVR_New_Char+0x1ae>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <LCD_AVR_New_Char+0x1b8>
 2f6:	00 00       	nop
 2f8:	b7 c0       	rjmp	.+366    	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
		_delay_ms(100);
		break;
		case 3:
		LCD_AVR_Cmd(0x02);
 2fa:	82 e0       	ldi	r24, 0x02	; 2
 2fc:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(0x00);
 300:	80 e0       	ldi	r24, 0x00	; 0
 302:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		RS_ON;
 306:	85 b1       	in	r24, 0x05	; 5
 308:	82 60       	ori	r24, 0x02	; 2
 30a:	85 b9       	out	0x05, r24	; 5
		m=b>>4;
		n=b;
		LCD_AVR_Cmd(m);
 30c:	8d 2d       	mov	r24, r13
 30e:	82 95       	swap	r24
 310:	8f 70       	andi	r24, 0x0F	; 15
 312:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 316:	8d 2d       	mov	r24, r13
 318:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=c>>4;
		n=c;
		LCD_AVR_Cmd(m);
 31c:	81 2f       	mov	r24, r17
 31e:	82 95       	swap	r24
 320:	8f 70       	andi	r24, 0x0F	; 15
 322:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 326:	81 2f       	mov	r24, r17
 328:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=d>>4;
		n=d;
		LCD_AVR_Cmd(m);
 32c:	8f 2d       	mov	r24, r15
 32e:	82 95       	swap	r24
 330:	8f 70       	andi	r24, 0x0F	; 15
 332:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 336:	8f 2d       	mov	r24, r15
 338:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=e>>4;
		n=e;
		LCD_AVR_Cmd(m);
 33c:	80 2f       	mov	r24, r16
 33e:	82 95       	swap	r24
 340:	8f 70       	andi	r24, 0x0F	; 15
 342:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 346:	80 2f       	mov	r24, r16
 348:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=f>>4;
		n=f;
		LCD_AVR_Cmd(m);
 34c:	8e 2d       	mov	r24, r14
 34e:	82 95       	swap	r24
 350:	8f 70       	andi	r24, 0x0F	; 15
 352:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 356:	8e 2d       	mov	r24, r14
 358:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=g>>4;
		n=g;
		LCD_AVR_Cmd(m);
 35c:	8c 2d       	mov	r24, r12
 35e:	82 95       	swap	r24
 360:	8f 70       	andi	r24, 0x0F	; 15
 362:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 366:	8c 2d       	mov	r24, r12
 368:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=h>>4;
		n=h;
		LCD_AVR_Cmd(m);
 36c:	8a 2d       	mov	r24, r10
 36e:	82 95       	swap	r24
 370:	8f 70       	andi	r24, 0x0F	; 15
 372:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 376:	8a 2d       	mov	r24, r10
 378:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=i>>4;
		n=i;
		LCD_AVR_Cmd(m);
 37c:	88 2d       	mov	r24, r8
 37e:	82 95       	swap	r24
 380:	8f 70       	andi	r24, 0x0F	; 15
 382:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 386:	88 2d       	mov	r24, r8
 388:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		RS_OFF;
 38c:	85 b1       	in	r24, 0x05	; 5
 38e:	8d 7f       	andi	r24, 0xFD	; 253
 390:	85 b9       	out	0x05, r24	; 5
		LCD_AVR_Cmd(0x00);
 392:	80 e0       	ldi	r24, 0x00	; 0
 394:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(0x01);
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
 39e:	2f ef       	ldi	r18, 0xFF	; 255
 3a0:	80 e7       	ldi	r24, 0x70	; 112
 3a2:	92 e0       	ldi	r25, 0x02	; 2
 3a4:	21 50       	subi	r18, 0x01	; 1
 3a6:	80 40       	sbci	r24, 0x00	; 0
 3a8:	90 40       	sbci	r25, 0x00	; 0
 3aa:	e1 f7       	brne	.-8      	; 0x3a4 <LCD_AVR_New_Char+0x266>
 3ac:	00 c0       	rjmp	.+0      	; 0x3ae <LCD_AVR_New_Char+0x270>
 3ae:	00 00       	nop
 3b0:	5b c0       	rjmp	.+182    	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
		_delay_ms(100);
		break;
		
		case 4:
		LCD_AVR_Cmd(0x04);
 3b2:	84 e0       	ldi	r24, 0x04	; 4
 3b4:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(0x00);
 3b8:	80 e0       	ldi	r24, 0x00	; 0
 3ba:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		RS_ON;
 3be:	85 b1       	in	r24, 0x05	; 5
 3c0:	82 60       	ori	r24, 0x02	; 2
 3c2:	85 b9       	out	0x05, r24	; 5
		m=b>>4;
		n=b;
		LCD_AVR_Cmd(m);
 3c4:	8d 2d       	mov	r24, r13
 3c6:	82 95       	swap	r24
 3c8:	8f 70       	andi	r24, 0x0F	; 15
 3ca:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 3ce:	8d 2d       	mov	r24, r13
 3d0:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=c>>4;
		n=c;
		LCD_AVR_Cmd(m);
 3d4:	81 2f       	mov	r24, r17
 3d6:	82 95       	swap	r24
 3d8:	8f 70       	andi	r24, 0x0F	; 15
 3da:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 3de:	81 2f       	mov	r24, r17
 3e0:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=d>>4;
		n=d;
		LCD_AVR_Cmd(m);
 3e4:	8f 2d       	mov	r24, r15
 3e6:	82 95       	swap	r24
 3e8:	8f 70       	andi	r24, 0x0F	; 15
 3ea:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 3ee:	8f 2d       	mov	r24, r15
 3f0:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=e>>4;
		n=e;
		LCD_AVR_Cmd(m);
 3f4:	80 2f       	mov	r24, r16
 3f6:	82 95       	swap	r24
 3f8:	8f 70       	andi	r24, 0x0F	; 15
 3fa:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 3fe:	80 2f       	mov	r24, r16
 400:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=f>>4;
		n=f;
		LCD_AVR_Cmd(m);
 404:	8e 2d       	mov	r24, r14
 406:	82 95       	swap	r24
 408:	8f 70       	andi	r24, 0x0F	; 15
 40a:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 40e:	8e 2d       	mov	r24, r14
 410:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=g>>4;
		n=g;
		LCD_AVR_Cmd(m);
 414:	8c 2d       	mov	r24, r12
 416:	82 95       	swap	r24
 418:	8f 70       	andi	r24, 0x0F	; 15
 41a:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 41e:	8c 2d       	mov	r24, r12
 420:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=h>>4;
		n=h;
		LCD_AVR_Cmd(m);
 424:	8a 2d       	mov	r24, r10
 426:	82 95       	swap	r24
 428:	8f 70       	andi	r24, 0x0F	; 15
 42a:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 42e:	8a 2d       	mov	r24, r10
 430:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		m=i>>4;
		n=i;
		LCD_AVR_Cmd(m);
 434:	88 2d       	mov	r24, r8
 436:	82 95       	swap	r24
 438:	8f 70       	andi	r24, 0x0F	; 15
 43a:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(n);
 43e:	88 2d       	mov	r24, r8
 440:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		RS_OFF;
 444:	85 b1       	in	r24, 0x05	; 5
 446:	8d 7f       	andi	r24, 0xFD	; 253
 448:	85 b9       	out	0x05, r24	; 5
		LCD_AVR_Cmd(0x00);
 44a:	80 e0       	ldi	r24, 0x00	; 0
 44c:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
		LCD_AVR_Cmd(0x01);
 450:	81 e0       	ldi	r24, 0x01	; 1
 452:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
 456:	2f ef       	ldi	r18, 0xFF	; 255
 458:	80 e7       	ldi	r24, 0x70	; 112
 45a:	92 e0       	ldi	r25, 0x02	; 2
 45c:	21 50       	subi	r18, 0x01	; 1
 45e:	80 40       	sbci	r24, 0x00	; 0
 460:	90 40       	sbci	r25, 0x00	; 0
 462:	e1 f7       	brne	.-8      	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 464:	00 c0       	rjmp	.+0      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 466:	00 00       	nop
		_delay_ms(100);
		break;
	}
	
	
}
 468:	df 91       	pop	r29
 46a:	cf 91       	pop	r28
 46c:	1f 91       	pop	r17
 46e:	0f 91       	pop	r16
 470:	ff 90       	pop	r15
 472:	ef 90       	pop	r14
 474:	df 90       	pop	r13
 476:	cf 90       	pop	r12
 478:	af 90       	pop	r10
 47a:	8f 90       	pop	r8
 47c:	08 95       	ret

0000047e <LCD_AVR_Print_New_Char>:
void LCD_AVR_Print_New_Char(uint8_t a){
 47e:	cf 93       	push	r28
 480:	c8 2f       	mov	r28, r24
	RS_ON;
 482:	85 b1       	in	r24, 0x05	; 5
 484:	82 60       	ori	r24, 0x02	; 2
 486:	85 b9       	out	0x05, r24	; 5
	LCD_AVR_Cmd(0x00);
 488:	80 e0       	ldi	r24, 0x00	; 0
 48a:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
	LCD_AVR_Cmd(a-1);
 48e:	8f ef       	ldi	r24, 0xFF	; 255
 490:	8c 0f       	add	r24, r28
 492:	0e 94 65 00 	call	0xca	; 0xca <LCD_AVR_Cmd>
	RS_OFF;
 496:	85 b1       	in	r24, 0x05	; 5
 498:	8d 7f       	andi	r24, 0xFD	; 253
 49a:	85 b9       	out	0x05, r24	; 5
 49c:	cf 91       	pop	r28
 49e:	08 95       	ret

000004a0 <main>:
#include <util/delay.h>
#include "LCD_Libreria.h"

int main(void)
{
	LCD_AVR_Init();
 4a0:	0e 94 77 00 	call	0xee	; 0xee <LCD_AVR_Init>
	LCD_AVR_New_Char(4,0x0A,0x1F,0x1F,0x0E,0x0E,0x04,0x00,0x00);
 4a4:	81 2c       	mov	r8, r1
 4a6:	a1 2c       	mov	r10, r1
 4a8:	68 94       	set
 4aa:	cc 24       	eor	r12, r12
 4ac:	c2 f8       	bld	r12, 2
 4ae:	0f 2e       	mov	r0, r31
 4b0:	fe e0       	ldi	r31, 0x0E	; 14
 4b2:	ef 2e       	mov	r14, r31
 4b4:	f0 2d       	mov	r31, r0
 4b6:	0e e0       	ldi	r16, 0x0E	; 14
 4b8:	2f e1       	ldi	r18, 0x1F	; 31
 4ba:	4f e1       	ldi	r20, 0x1F	; 31
 4bc:	6a e0       	ldi	r22, 0x0A	; 10
 4be:	84 e0       	ldi	r24, 0x04	; 4
 4c0:	0e 94 9f 00 	call	0x13e	; 0x13e <LCD_AVR_New_Char>
	//LCD_AVR_Set_Cursor(0,Fila4);
	//LCD_AVR_Print_Char('A');
	
	
	
	LCD_AVR_Print_New_Char(1);
 4c4:	81 e0       	ldi	r24, 0x01	; 1
 4c6:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_AVR_Print_New_Char>
	LCD_AVR_Print_New_Char(2);
 4ca:	82 e0       	ldi	r24, 0x02	; 2
 4cc:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_AVR_Print_New_Char>
	LCD_AVR_Print_New_Char(3);
 4d0:	83 e0       	ldi	r24, 0x03	; 3
 4d2:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_AVR_Print_New_Char>
	LCD_AVR_Print_New_Char(4);
 4d6:	84 e0       	ldi	r24, 0x04	; 4
 4d8:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_AVR_Print_New_Char>
	LCD_AVR_Print_New_Char(5);
 4dc:	85 e0       	ldi	r24, 0x05	; 5
 4de:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_AVR_Print_New_Char>
	LCD_AVR_Print_New_Char(6);
 4e2:	86 e0       	ldi	r24, 0x06	; 6
 4e4:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_AVR_Print_New_Char>
	LCD_AVR_Print_New_Char(7);
 4e8:	87 e0       	ldi	r24, 0x07	; 7
 4ea:	0e 94 3f 02 	call	0x47e	; 0x47e <LCD_AVR_Print_New_Char>
 4ee:	ff cf       	rjmp	.-2      	; 0x4ee <main+0x4e>

000004f0 <_exit>:
 4f0:	f8 94       	cli

000004f2 <__stop_program>:
 4f2:	ff cf       	rjmp	.-2      	; 0x4f2 <__stop_program>
