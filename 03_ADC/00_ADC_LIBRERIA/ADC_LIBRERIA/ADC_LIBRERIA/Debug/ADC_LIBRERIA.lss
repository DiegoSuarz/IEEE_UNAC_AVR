
ADC_LIBRERIA.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002c  00800100  00000fa4  00001038  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fa4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000d0  0080012c  0080012c  00001064  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001064  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00001100  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001fc7  00000000  00000000  000011c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008dd  00000000  00000000  00003187  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000af2  00000000  00000000  00003a64  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000300  00000000  00000000  00004558  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000595  00000000  00000000  00004858  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000010bc  00000000  00000000  00004ded  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00005ea9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 ea       	ldi	r30, 0xA4	; 164
  7c:	ff e0       	ldi	r31, 0x0F	; 15
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 32       	cpi	r26, 0x2C	; 44
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e2       	ldi	r26, 0x2C	; 44
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 3f       	cpi	r26, 0xFC	; 252
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 32 03 	call	0x664	; 0x664 <main>
  9e:	0c 94 d0 07 	jmp	0xfa0	; 0xfa0 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ADC_Init>:
	
} 


void ADC_Enable(void){
	ADCSRA |= (1<<ADEN); //habilitamos el periferico adc
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	80 64       	ori	r24, 0x40	; 64
  ae:	80 83       	st	Z, r24
  b0:	80 81       	ld	r24, Z
  b2:	8f 77       	andi	r24, 0x7F	; 127
  b4:	80 83       	st	Z, r24
  b6:	80 81       	ld	r24, Z
  b8:	8f 7d       	andi	r24, 0xDF	; 223
  ba:	80 83       	st	Z, r24
  bc:	ea e7       	ldi	r30, 0x7A	; 122
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	80 81       	ld	r24, Z
  c2:	87 60       	ori	r24, 0x07	; 7
  c4:	80 83       	st	Z, r24
  c6:	8f ef       	ldi	r24, 0xFF	; 255
  c8:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
  cc:	08 95       	ret

000000ce <ADC_Disable>:
	
	
}	
void ADC_Disable(void){
	ADCSRA &= ~(1<<ADEN);  //deshabilitamos el periferico adc
  ce:	ea e7       	ldi	r30, 0x7A	; 122
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	80 81       	ld	r24, Z
  d4:	8f 77       	andi	r24, 0x7F	; 127
  d6:	80 83       	st	Z, r24
  d8:	08 95       	ret

000000da <ADC_AnalogRead>:
}

uint16_t ADC_AnalogRead(Channel ANx){
	
	//Seleccionamos el canal del ADC
	ADMUX = ((ADMUX & 0xF0)|(ANx & 0x0F));
  da:	ec e7       	ldi	r30, 0x7C	; 124
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	90 81       	ld	r25, Z
  e0:	90 7f       	andi	r25, 0xF0	; 240
  e2:	8f 70       	andi	r24, 0x0F	; 15
  e4:	89 2b       	or	r24, r25
  e6:	80 83       	st	Z, r24
	
	//habilitamos el periferico adc
	ADCSRA |= (1<<ADEN); 
  e8:	ea e7       	ldi	r30, 0x7A	; 122
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	80 81       	ld	r24, Z
  ee:	80 68       	ori	r24, 0x80	; 128
  f0:	80 83       	st	Z, r24
	
	//Iniciar Conversion
	ADCSRA |= (1<<ADSC);
  f2:	80 81       	ld	r24, Z
  f4:	80 64       	ori	r24, 0x40	; 64
  f6:	80 83       	st	Z, r24
	
	//Esperar que la conversion termine
	while(((ADCSRA &(1<<ADSC)))!=0);
  f8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  fc:	86 fd       	sbrc	r24, 6
  fe:	fc cf       	rjmp	.-8      	; 0xf8 <ADC_AnalogRead+0x1e>
	
	//deshabilitamos el ADC
	ADC_Disable();
 100:	0e 94 67 00 	call	0xce	; 0xce <ADC_Disable>
	
	return (ADC);
 104:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 108:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
 10c:	08 95       	ret

0000010e <LCD_AVR_Data_Bus>:
	_delay_ms(2);
	E_OFF;
}
void LCD_AVR_Data_Bus(uint8_t a){
	// 0001
	if (a & 0x01){D4_ON;}
 10e:	80 ff       	sbrs	r24, 0
 110:	04 c0       	rjmp	.+8      	; 0x11a <LCD_AVR_Data_Bus+0xc>
 112:	95 b1       	in	r25, 0x05	; 5
 114:	94 60       	ori	r25, 0x04	; 4
 116:	95 b9       	out	0x05, r25	; 5
 118:	03 c0       	rjmp	.+6      	; 0x120 <LCD_AVR_Data_Bus+0x12>
	else{D4_OFF;}
 11a:	95 b1       	in	r25, 0x05	; 5
 11c:	9b 7f       	andi	r25, 0xFB	; 251
 11e:	95 b9       	out	0x05, r25	; 5
	// 0010
	if (a & 0x02){D5_ON;}
 120:	81 ff       	sbrs	r24, 1
 122:	04 c0       	rjmp	.+8      	; 0x12c <LCD_AVR_Data_Bus+0x1e>
 124:	95 b1       	in	r25, 0x05	; 5
 126:	98 60       	ori	r25, 0x08	; 8
 128:	95 b9       	out	0x05, r25	; 5
 12a:	03 c0       	rjmp	.+6      	; 0x132 <LCD_AVR_Data_Bus+0x24>
	else{D5_OFF;}
 12c:	95 b1       	in	r25, 0x05	; 5
 12e:	97 7f       	andi	r25, 0xF7	; 247
 130:	95 b9       	out	0x05, r25	; 5
	// 0100
	if (a & 0x04){D6_ON;}
 132:	82 ff       	sbrs	r24, 2
 134:	04 c0       	rjmp	.+8      	; 0x13e <LCD_AVR_Data_Bus+0x30>
 136:	95 b1       	in	r25, 0x05	; 5
 138:	90 61       	ori	r25, 0x10	; 16
 13a:	95 b9       	out	0x05, r25	; 5
 13c:	03 c0       	rjmp	.+6      	; 0x144 <LCD_AVR_Data_Bus+0x36>
	else{D6_OFF;}
 13e:	95 b1       	in	r25, 0x05	; 5
 140:	9f 7e       	andi	r25, 0xEF	; 239
 142:	95 b9       	out	0x05, r25	; 5
	// 1000
	if (a & 0x08){D7_ON;}
 144:	83 ff       	sbrs	r24, 3
 146:	04 c0       	rjmp	.+8      	; 0x150 <LCD_AVR_Data_Bus+0x42>
 148:	85 b1       	in	r24, 0x05	; 5
 14a:	80 62       	ori	r24, 0x20	; 32
 14c:	85 b9       	out	0x05, r24	; 5
 14e:	08 95       	ret
	else{D7_OFF;}
 150:	85 b1       	in	r24, 0x05	; 5
 152:	8f 7d       	andi	r24, 0xDF	; 223
 154:	85 b9       	out	0x05, r24	; 5
 156:	08 95       	ret

00000158 <LCD_AVR_Cmd>:
#include "LCD_Libreria.h"
#define  F_CPU 8000000UL
#include <util/delay.h>

void LCD_AVR_Cmd(uint8_t a){
	E_OFF;
 158:	95 b1       	in	r25, 0x05	; 5
 15a:	9e 7f       	andi	r25, 0xFE	; 254
 15c:	95 b9       	out	0x05, r25	; 5
	E_ON;
 15e:	95 b1       	in	r25, 0x05	; 5
 160:	91 60       	ori	r25, 0x01	; 1
 162:	95 b9       	out	0x05, r25	; 5
	LCD_AVR_Data_Bus(a)	;
 164:	0e 94 87 00 	call	0x10e	; 0x10e <LCD_AVR_Data_Bus>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 168:	8f e9       	ldi	r24, 0x9F	; 159
 16a:	9f e0       	ldi	r25, 0x0F	; 15
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <LCD_AVR_Cmd+0x14>
 170:	00 c0       	rjmp	.+0      	; 0x172 <LCD_AVR_Cmd+0x1a>
 172:	00 00       	nop
	_delay_ms(2);
	E_OFF;
 174:	85 b1       	in	r24, 0x05	; 5
 176:	8e 7f       	andi	r24, 0xFE	; 254
 178:	85 b9       	out	0x05, r24	; 5
 17a:	08 95       	ret

0000017c <LCD_AVR_Init>:
	if (a & 0x08){D7_ON;}
	else{D7_OFF;}
}
void LCD_AVR_Init(void){
	
	DDRB |= (1<<0) |(1<<1)|(1<<2)|(1<<3)|(1<<4)|(1<<5);
 17c:	84 b1       	in	r24, 0x04	; 4
 17e:	8f 63       	ori	r24, 0x3F	; 63
 180:	84 b9       	out	0x04, r24	; 4
	
	LCD_AVR_Cmd(0X03);
 182:	83 e0       	ldi	r24, 0x03	; 3
 184:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X03);
 188:	83 e0       	ldi	r24, 0x03	; 3
 18a:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X03);
 18e:	83 e0       	ldi	r24, 0x03	; 3
 190:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X02);
 194:	82 e0       	ldi	r24, 0x02	; 2
 196:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X02);
 19a:	82 e0       	ldi	r24, 0x02	; 2
 19c:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X08);
 1a0:	88 e0       	ldi	r24, 0x08	; 8
 1a2:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X00);
 1a6:	80 e0       	ldi	r24, 0x00	; 0
 1a8:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X08);
 1ac:	88 e0       	ldi	r24, 0x08	; 8
 1ae:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X00);
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X01);
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X00);
 1be:	80 e0       	ldi	r24, 0x00	; 0
 1c0:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X0C);
 1c4:	8c e0       	ldi	r24, 0x0C	; 12
 1c6:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
 1ca:	08 95       	ret

000001cc <LCD_AVR_Set_Cursor>:
	
}
void LCD_AVR_Set_Cursor(uint8_t x,Ubicacion y){
 1cc:	cf 93       	push	r28
	uint8_t m,n;

	RS_OFF;
 1ce:	95 b1       	in	r25, 0x05	; 5
 1d0:	9d 7f       	andi	r25, 0xFD	; 253
 1d2:	95 b9       	out	0x05, r25	; 5
	switch (y)
 1d4:	61 30       	cpi	r22, 0x01	; 1
 1d6:	c9 f0       	breq	.+50     	; 0x20a <LCD_AVR_Set_Cursor+0x3e>
 1d8:	28 f0       	brcs	.+10     	; 0x1e4 <LCD_AVR_Set_Cursor+0x18>
 1da:	62 30       	cpi	r22, 0x02	; 2
 1dc:	49 f1       	breq	.+82     	; 0x230 <LCD_AVR_Set_Cursor+0x64>
 1de:	63 30       	cpi	r22, 0x03	; 3
 1e0:	d1 f1       	breq	.+116    	; 0x256 <LCD_AVR_Set_Cursor+0x8a>
 1e2:	4b c0       	rjmp	.+150    	; 0x27a <LCD_AVR_Set_Cursor+0xae>
	{
		case Fila1:
		m=0x80+x;
 1e4:	c0 e8       	ldi	r28, 0x80	; 128
 1e6:	c8 0f       	add	r28, r24
		n=(0x80+x)>>4;
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	80 58       	subi	r24, 0x80	; 128
 1ec:	9f 4f       	sbci	r25, 0xFF	; 255
 1ee:	95 95       	asr	r25
 1f0:	87 95       	ror	r24
 1f2:	95 95       	asr	r25
 1f4:	87 95       	ror	r24
 1f6:	95 95       	asr	r25
 1f8:	87 95       	ror	r24
 1fa:	95 95       	asr	r25
 1fc:	87 95       	ror	r24
		LCD_AVR_Cmd(n);
 1fe:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
		LCD_AVR_Cmd(m);
 202:	8c 2f       	mov	r24, r28
 204:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
		break;
 208:	38 c0       	rjmp	.+112    	; 0x27a <LCD_AVR_Set_Cursor+0xae>
		case Fila2:
		m=0xC0+x;
 20a:	c0 ec       	ldi	r28, 0xC0	; 192
 20c:	c8 0f       	add	r28, r24
		n=(0XC0+x)>>4;
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	80 54       	subi	r24, 0x40	; 64
 212:	9f 4f       	sbci	r25, 0xFF	; 255
 214:	95 95       	asr	r25
 216:	87 95       	ror	r24
 218:	95 95       	asr	r25
 21a:	87 95       	ror	r24
 21c:	95 95       	asr	r25
 21e:	87 95       	ror	r24
 220:	95 95       	asr	r25
 222:	87 95       	ror	r24
		LCD_AVR_Cmd(n);
 224:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
		LCD_AVR_Cmd(m);
 228:	8c 2f       	mov	r24, r28
 22a:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
		break;
 22e:	25 c0       	rjmp	.+74     	; 0x27a <LCD_AVR_Set_Cursor+0xae>
		case Fila3:
		m=0x94+x;
 230:	c4 e9       	ldi	r28, 0x94	; 148
 232:	c8 0f       	add	r28, r24
		n=(0x94+x)>>4;
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	8c 56       	subi	r24, 0x6C	; 108
 238:	9f 4f       	sbci	r25, 0xFF	; 255
 23a:	95 95       	asr	r25
 23c:	87 95       	ror	r24
 23e:	95 95       	asr	r25
 240:	87 95       	ror	r24
 242:	95 95       	asr	r25
 244:	87 95       	ror	r24
 246:	95 95       	asr	r25
 248:	87 95       	ror	r24
		LCD_AVR_Cmd(n);
 24a:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
		LCD_AVR_Cmd(m);
 24e:	8c 2f       	mov	r24, r28
 250:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
		break;
 254:	12 c0       	rjmp	.+36     	; 0x27a <LCD_AVR_Set_Cursor+0xae>
		case Fila4:
		m=0xD4+x;
 256:	c4 ed       	ldi	r28, 0xD4	; 212
 258:	c8 0f       	add	r28, r24
		n=(0xD4+x)>>4;
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	8c 52       	subi	r24, 0x2C	; 44
 25e:	9f 4f       	sbci	r25, 0xFF	; 255
 260:	95 95       	asr	r25
 262:	87 95       	ror	r24
 264:	95 95       	asr	r25
 266:	87 95       	ror	r24
 268:	95 95       	asr	r25
 26a:	87 95       	ror	r24
 26c:	95 95       	asr	r25
 26e:	87 95       	ror	r24
		LCD_AVR_Cmd(n);
 270:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
		LCD_AVR_Cmd(m);
 274:	8c 2f       	mov	r24, r28
 276:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
		break;
	}
	
}
 27a:	cf 91       	pop	r28
 27c:	08 95       	ret

0000027e <LCD_AVR_Print_Char>:
void LCD_AVR_Print_Char(char c){
 27e:	cf 93       	push	r28
 280:	c8 2f       	mov	r28, r24
	uint8_t m,n;
	m=c>>4;
	n=c;
	RS_ON;
 282:	85 b1       	in	r24, 0x05	; 5
 284:	82 60       	ori	r24, 0x02	; 2
 286:	85 b9       	out	0x05, r24	; 5
	LCD_AVR_Cmd(m);
 288:	8c 2f       	mov	r24, r28
 28a:	82 95       	swap	r24
 28c:	8f 70       	andi	r24, 0x0F	; 15
 28e:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(n);
 292:	8c 2f       	mov	r24, r28
 294:	0e 94 ac 00 	call	0x158	; 0x158 <LCD_AVR_Cmd>
}
 298:	cf 91       	pop	r28
 29a:	08 95       	ret

0000029c <LCD_AVR_Print_String>:
void LCD_AVR_Print_String(char *c){
 29c:	cf 93       	push	r28
 29e:	df 93       	push	r29
 2a0:	ec 01       	movw	r28, r24
	
	char *ptr;
	ptr = c;
	while(*ptr)
 2a2:	03 c0       	rjmp	.+6      	; 0x2aa <LCD_AVR_Print_String+0xe>
	LCD_AVR_Print_Char(*ptr++);
 2a4:	21 96       	adiw	r28, 0x01	; 1
 2a6:	0e 94 3f 01 	call	0x27e	; 0x27e <LCD_AVR_Print_Char>
}
void LCD_AVR_Print_String(char *c){
	
	char *ptr;
	ptr = c;
	while(*ptr)
 2aa:	88 81       	ld	r24, Y
 2ac:	81 11       	cpse	r24, r1
 2ae:	fa cf       	rjmp	.-12     	; 0x2a4 <LCD_AVR_Print_String+0x8>
	LCD_AVR_Print_Char(*ptr++);
	
}
 2b0:	df 91       	pop	r29
 2b2:	cf 91       	pop	r28
 2b4:	08 95       	ret

000002b6 <Ejemplo2>:
	LCD_AVR_Print_String(Buffer6);
	LCD_AVR_Set_Cursor(15,Fila4);
	LCD_AVR_Print_String(Buffer7);
}

void Ejemplo2(void){
 2b6:	cf 93       	push	r28
 2b8:	df 93       	push	r29
	//inciamos la conversion
	pot0 = (float)(ADC_AnalogRead(AN0)*VREF_AVR)/VREF_AVR;
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	0e 94 6d 00 	call	0xda	; 0xda <ADC_AnalogRead>
 2c0:	bc 01       	movw	r22, r24
 2c2:	80 e0       	ldi	r24, 0x00	; 0
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <__floatunsisf>
 2ca:	20 e0       	ldi	r18, 0x00	; 0
 2cc:	30 e0       	ldi	r19, 0x00	; 0
 2ce:	40 ea       	ldi	r20, 0xA0	; 160
 2d0:	50 e4       	ldi	r21, 0x40	; 64
 2d2:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__mulsf3>
 2d6:	20 e0       	ldi	r18, 0x00	; 0
 2d8:	30 e0       	ldi	r19, 0x00	; 0
 2da:	40 ea       	ldi	r20, 0xA0	; 160
 2dc:	50 e4       	ldi	r21, 0x40	; 64
 2de:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__divsf3>
 2e2:	60 93 e4 01 	sts	0x01E4, r22	; 0x8001e4 <pot0>
 2e6:	70 93 e5 01 	sts	0x01E5, r23	; 0x8001e5 <pot0+0x1>
 2ea:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <pot0+0x2>
 2ee:	90 93 e7 01 	sts	0x01E7, r25	; 0x8001e7 <pot0+0x3>
	pot1 = (float)(ADC_AnalogRead(AN1)*VREF_AVR)/VREF_AVR;
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	0e 94 6d 00 	call	0xda	; 0xda <ADC_AnalogRead>
 2f8:	bc 01       	movw	r22, r24
 2fa:	80 e0       	ldi	r24, 0x00	; 0
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <__floatunsisf>
 302:	20 e0       	ldi	r18, 0x00	; 0
 304:	30 e0       	ldi	r19, 0x00	; 0
 306:	40 ea       	ldi	r20, 0xA0	; 160
 308:	50 e4       	ldi	r21, 0x40	; 64
 30a:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__mulsf3>
 30e:	20 e0       	ldi	r18, 0x00	; 0
 310:	30 e0       	ldi	r19, 0x00	; 0
 312:	40 ea       	ldi	r20, 0xA0	; 160
 314:	50 e4       	ldi	r21, 0x40	; 64
 316:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__divsf3>
 31a:	60 93 7e 01 	sts	0x017E, r22	; 0x80017e <pot1>
 31e:	70 93 7f 01 	sts	0x017F, r23	; 0x80017f <pot1+0x1>
 322:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <pot1+0x2>
 326:	90 93 81 01 	sts	0x0181, r25	; 0x800181 <pot1+0x3>
	pot2 = (float)(ADC_AnalogRead(AN2)*VREF_AVR)/VREF_AVR;
 32a:	82 e0       	ldi	r24, 0x02	; 2
 32c:	0e 94 6d 00 	call	0xda	; 0xda <ADC_AnalogRead>
 330:	bc 01       	movw	r22, r24
 332:	80 e0       	ldi	r24, 0x00	; 0
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <__floatunsisf>
 33a:	20 e0       	ldi	r18, 0x00	; 0
 33c:	30 e0       	ldi	r19, 0x00	; 0
 33e:	40 ea       	ldi	r20, 0xA0	; 160
 340:	50 e4       	ldi	r21, 0x40	; 64
 342:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__mulsf3>
 346:	20 e0       	ldi	r18, 0x00	; 0
 348:	30 e0       	ldi	r19, 0x00	; 0
 34a:	40 ea       	ldi	r20, 0xA0	; 160
 34c:	50 e4       	ldi	r21, 0x40	; 64
 34e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__divsf3>
 352:	60 93 2e 01 	sts	0x012E, r22	; 0x80012e <pot2>
 356:	70 93 2f 01 	sts	0x012F, r23	; 0x80012f <pot2+0x1>
 35a:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <pot2+0x2>
 35e:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <pot2+0x3>
	pot3 = (float)(ADC_AnalogRead(AN3)*VREF_AVR)/VREF_AVR;
 362:	83 e0       	ldi	r24, 0x03	; 3
 364:	0e 94 6d 00 	call	0xda	; 0xda <ADC_AnalogRead>
 368:	bc 01       	movw	r22, r24
 36a:	80 e0       	ldi	r24, 0x00	; 0
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <__floatunsisf>
 372:	20 e0       	ldi	r18, 0x00	; 0
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	40 ea       	ldi	r20, 0xA0	; 160
 378:	50 e4       	ldi	r21, 0x40	; 64
 37a:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__mulsf3>
 37e:	20 e0       	ldi	r18, 0x00	; 0
 380:	30 e0       	ldi	r19, 0x00	; 0
 382:	40 ea       	ldi	r20, 0xA0	; 160
 384:	50 e4       	ldi	r21, 0x40	; 64
 386:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__divsf3>
 38a:	60 93 34 01 	sts	0x0134, r22	; 0x800134 <pot3>
 38e:	70 93 35 01 	sts	0x0135, r23	; 0x800135 <pot3+0x1>
 392:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <pot3+0x2>
 396:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <pot3+0x3>
	pot4 = (float)(ADC_AnalogRead(AN4)*VREF_AVR)/VREF_AVR;
 39a:	84 e0       	ldi	r24, 0x04	; 4
 39c:	0e 94 6d 00 	call	0xda	; 0xda <ADC_AnalogRead>
 3a0:	bc 01       	movw	r22, r24
 3a2:	80 e0       	ldi	r24, 0x00	; 0
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <__floatunsisf>
 3aa:	20 e0       	ldi	r18, 0x00	; 0
 3ac:	30 e0       	ldi	r19, 0x00	; 0
 3ae:	40 ea       	ldi	r20, 0xA0	; 160
 3b0:	50 e4       	ldi	r21, 0x40	; 64
 3b2:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__mulsf3>
 3b6:	20 e0       	ldi	r18, 0x00	; 0
 3b8:	30 e0       	ldi	r19, 0x00	; 0
 3ba:	40 ea       	ldi	r20, 0xA0	; 160
 3bc:	50 e4       	ldi	r21, 0x40	; 64
 3be:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__divsf3>
 3c2:	60 93 c8 01 	sts	0x01C8, r22	; 0x8001c8 <pot4>
 3c6:	70 93 c9 01 	sts	0x01C9, r23	; 0x8001c9 <pot4+0x1>
 3ca:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <pot4+0x2>
 3ce:	90 93 cb 01 	sts	0x01CB, r25	; 0x8001cb <pot4+0x3>
	pot5 = (float)(ADC_AnalogRead(AN5)*VREF_AVR)/VREF_AVR;
 3d2:	85 e0       	ldi	r24, 0x05	; 5
 3d4:	0e 94 6d 00 	call	0xda	; 0xda <ADC_AnalogRead>
 3d8:	bc 01       	movw	r22, r24
 3da:	80 e0       	ldi	r24, 0x00	; 0
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <__floatunsisf>
 3e2:	20 e0       	ldi	r18, 0x00	; 0
 3e4:	30 e0       	ldi	r19, 0x00	; 0
 3e6:	40 ea       	ldi	r20, 0xA0	; 160
 3e8:	50 e4       	ldi	r21, 0x40	; 64
 3ea:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__mulsf3>
 3ee:	20 e0       	ldi	r18, 0x00	; 0
 3f0:	30 e0       	ldi	r19, 0x00	; 0
 3f2:	40 ea       	ldi	r20, 0xA0	; 160
 3f4:	50 e4       	ldi	r21, 0x40	; 64
 3f6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__divsf3>
 3fa:	60 93 e0 01 	sts	0x01E0, r22	; 0x8001e0 <pot5>
 3fe:	70 93 e1 01 	sts	0x01E1, r23	; 0x8001e1 <pot5+0x1>
 402:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <pot5+0x2>
 406:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <pot5+0x3>
	pot6 = (float)(ADC_AnalogRead(AN6)*VREF_AVR)/VREF_AVR;
 40a:	86 e0       	ldi	r24, 0x06	; 6
 40c:	0e 94 6d 00 	call	0xda	; 0xda <ADC_AnalogRead>
 410:	bc 01       	movw	r22, r24
 412:	80 e0       	ldi	r24, 0x00	; 0
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <__floatunsisf>
 41a:	20 e0       	ldi	r18, 0x00	; 0
 41c:	30 e0       	ldi	r19, 0x00	; 0
 41e:	40 ea       	ldi	r20, 0xA0	; 160
 420:	50 e4       	ldi	r21, 0x40	; 64
 422:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__mulsf3>
 426:	20 e0       	ldi	r18, 0x00	; 0
 428:	30 e0       	ldi	r19, 0x00	; 0
 42a:	40 ea       	ldi	r20, 0xA0	; 160
 42c:	50 e4       	ldi	r21, 0x40	; 64
 42e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__divsf3>
 432:	60 93 7a 01 	sts	0x017A, r22	; 0x80017a <pot6>
 436:	70 93 7b 01 	sts	0x017B, r23	; 0x80017b <pot6+0x1>
 43a:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <pot6+0x2>
 43e:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <pot6+0x3>
	pot7 = (float)(ADC_AnalogRead(AN7)*VREF_AVR)/VREF_AVR;
 442:	87 e0       	ldi	r24, 0x07	; 7
 444:	0e 94 6d 00 	call	0xda	; 0xda <ADC_AnalogRead>
 448:	bc 01       	movw	r22, r24
 44a:	80 e0       	ldi	r24, 0x00	; 0
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <__floatunsisf>
 452:	20 e0       	ldi	r18, 0x00	; 0
 454:	30 e0       	ldi	r19, 0x00	; 0
 456:	40 ea       	ldi	r20, 0xA0	; 160
 458:	50 e4       	ldi	r21, 0x40	; 64
 45a:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__mulsf3>
 45e:	20 e0       	ldi	r18, 0x00	; 0
 460:	30 e0       	ldi	r19, 0x00	; 0
 462:	40 ea       	ldi	r20, 0xA0	; 160
 464:	50 e4       	ldi	r21, 0x40	; 64
 466:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__divsf3>
 46a:	60 93 b0 01 	sts	0x01B0, r22	; 0x8001b0 <pot7>
 46e:	70 93 b1 01 	sts	0x01B1, r23	; 0x8001b1 <pot7+0x1>
 472:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <pot7+0x2>
 476:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <pot7+0x3>
	//
	//convertimos uint a string (ascii)
	sprintf((char*)Buffer0,"%0.2f",pot0);
 47a:	80 91 e7 01 	lds	r24, 0x01E7	; 0x8001e7 <pot0+0x3>
 47e:	8f 93       	push	r24
 480:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <pot0+0x2>
 484:	8f 93       	push	r24
 486:	80 91 e5 01 	lds	r24, 0x01E5	; 0x8001e5 <pot0+0x1>
 48a:	8f 93       	push	r24
 48c:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <pot0>
 490:	8f 93       	push	r24
 492:	c5 e0       	ldi	r28, 0x05	; 5
 494:	d1 e0       	ldi	r29, 0x01	; 1
 496:	df 93       	push	r29
 498:	cf 93       	push	r28
 49a:	88 e3       	ldi	r24, 0x38	; 56
 49c:	91 e0       	ldi	r25, 0x01	; 1
 49e:	9f 93       	push	r25
 4a0:	8f 93       	push	r24
 4a2:	0e 94 e6 04 	call	0x9cc	; 0x9cc <sprintf>
	sprintf((char*)Buffer1,"%0.2f",pot1);
 4a6:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <pot1+0x3>
 4aa:	8f 93       	push	r24
 4ac:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <pot1+0x2>
 4b0:	8f 93       	push	r24
 4b2:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <pot1+0x1>
 4b6:	8f 93       	push	r24
 4b8:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <pot1>
 4bc:	8f 93       	push	r24
 4be:	df 93       	push	r29
 4c0:	cf 93       	push	r28
 4c2:	84 eb       	ldi	r24, 0xB4	; 180
 4c4:	91 e0       	ldi	r25, 0x01	; 1
 4c6:	9f 93       	push	r25
 4c8:	8f 93       	push	r24
 4ca:	0e 94 e6 04 	call	0x9cc	; 0x9cc <sprintf>
	sprintf((char*)Buffer2,"%0.2f",pot2);
 4ce:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <pot2+0x3>
 4d2:	8f 93       	push	r24
 4d4:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <pot2+0x2>
 4d8:	8f 93       	push	r24
 4da:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <pot2+0x1>
 4de:	8f 93       	push	r24
 4e0:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <pot2>
 4e4:	8f 93       	push	r24
 4e6:	df 93       	push	r29
 4e8:	cf 93       	push	r28
 4ea:	88 ee       	ldi	r24, 0xE8	; 232
 4ec:	91 e0       	ldi	r25, 0x01	; 1
 4ee:	9f 93       	push	r25
 4f0:	8f 93       	push	r24
 4f2:	0e 94 e6 04 	call	0x9cc	; 0x9cc <sprintf>
	sprintf((char*)Buffer3,"%0.2f",pot3);
 4f6:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <pot3+0x3>
 4fa:	8f 93       	push	r24
 4fc:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <pot3+0x2>
 500:	8f 93       	push	r24
 502:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <pot3+0x1>
 506:	8f 93       	push	r24
 508:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <pot3>
 50c:	8f 93       	push	r24
 50e:	df 93       	push	r29
 510:	cf 93       	push	r28
 512:	8c ec       	ldi	r24, 0xCC	; 204
 514:	91 e0       	ldi	r25, 0x01	; 1
 516:	9f 93       	push	r25
 518:	8f 93       	push	r24
 51a:	0e 94 e6 04 	call	0x9cc	; 0x9cc <sprintf>
	sprintf((char*)Buffer4,"%0.2f",pot4);
 51e:	8d b7       	in	r24, 0x3d	; 61
 520:	9e b7       	in	r25, 0x3e	; 62
 522:	80 96       	adiw	r24, 0x20	; 32
 524:	0f b6       	in	r0, 0x3f	; 63
 526:	f8 94       	cli
 528:	9e bf       	out	0x3e, r25	; 62
 52a:	0f be       	out	0x3f, r0	; 63
 52c:	8d bf       	out	0x3d, r24	; 61
 52e:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <pot4+0x3>
 532:	8f 93       	push	r24
 534:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <pot4+0x2>
 538:	8f 93       	push	r24
 53a:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <pot4+0x1>
 53e:	8f 93       	push	r24
 540:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <pot4>
 544:	8f 93       	push	r24
 546:	df 93       	push	r29
 548:	cf 93       	push	r28
 54a:	8a e9       	ldi	r24, 0x9A	; 154
 54c:	91 e0       	ldi	r25, 0x01	; 1
 54e:	9f 93       	push	r25
 550:	8f 93       	push	r24
 552:	0e 94 e6 04 	call	0x9cc	; 0x9cc <sprintf>
	sprintf((char*)Buffer5,"%0.2f",pot5);
 556:	80 91 e3 01 	lds	r24, 0x01E3	; 0x8001e3 <pot5+0x3>
 55a:	8f 93       	push	r24
 55c:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <pot5+0x2>
 560:	8f 93       	push	r24
 562:	80 91 e1 01 	lds	r24, 0x01E1	; 0x8001e1 <pot5+0x1>
 566:	8f 93       	push	r24
 568:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <pot5>
 56c:	8f 93       	push	r24
 56e:	df 93       	push	r29
 570:	cf 93       	push	r28
 572:	86 e6       	ldi	r24, 0x66	; 102
 574:	91 e0       	ldi	r25, 0x01	; 1
 576:	9f 93       	push	r25
 578:	8f 93       	push	r24
 57a:	0e 94 e6 04 	call	0x9cc	; 0x9cc <sprintf>
	sprintf((char*)Buffer6,"%0.2f",pot6);
 57e:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <pot6+0x3>
 582:	8f 93       	push	r24
 584:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <pot6+0x2>
 588:	8f 93       	push	r24
 58a:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <pot6+0x1>
 58e:	8f 93       	push	r24
 590:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <pot6>
 594:	8f 93       	push	r24
 596:	df 93       	push	r29
 598:	cf 93       	push	r28
 59a:	82 e8       	ldi	r24, 0x82	; 130
 59c:	91 e0       	ldi	r25, 0x01	; 1
 59e:	9f 93       	push	r25
 5a0:	8f 93       	push	r24
 5a2:	0e 94 e6 04 	call	0x9cc	; 0x9cc <sprintf>
	sprintf((char*)Buffer7,"%0.2f",pot7);
 5a6:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <pot7+0x3>
 5aa:	8f 93       	push	r24
 5ac:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <pot7+0x2>
 5b0:	8f 93       	push	r24
 5b2:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <pot7+0x1>
 5b6:	8f 93       	push	r24
 5b8:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <pot7>
 5bc:	8f 93       	push	r24
 5be:	df 93       	push	r29
 5c0:	cf 93       	push	r28
 5c2:	8e e4       	ldi	r24, 0x4E	; 78
 5c4:	91 e0       	ldi	r25, 0x01	; 1
 5c6:	9f 93       	push	r25
 5c8:	8f 93       	push	r24
 5ca:	0e 94 e6 04 	call	0x9cc	; 0x9cc <sprintf>

	//escribimos en la lcd:
	LCD_AVR_Set_Cursor(4,Fila1);
 5ce:	8d b7       	in	r24, 0x3d	; 61
 5d0:	9e b7       	in	r25, 0x3e	; 62
 5d2:	80 96       	adiw	r24, 0x20	; 32
 5d4:	0f b6       	in	r0, 0x3f	; 63
 5d6:	f8 94       	cli
 5d8:	9e bf       	out	0x3e, r25	; 62
 5da:	0f be       	out	0x3f, r0	; 63
 5dc:	8d bf       	out	0x3d, r24	; 61
 5de:	60 e0       	ldi	r22, 0x00	; 0
 5e0:	84 e0       	ldi	r24, 0x04	; 4
 5e2:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String(Buffer0);
 5e6:	88 e3       	ldi	r24, 0x38	; 56
 5e8:	91 e0       	ldi	r25, 0x01	; 1
 5ea:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(15,Fila1);
 5ee:	60 e0       	ldi	r22, 0x00	; 0
 5f0:	8f e0       	ldi	r24, 0x0F	; 15
 5f2:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String(Buffer1);
 5f6:	84 eb       	ldi	r24, 0xB4	; 180
 5f8:	91 e0       	ldi	r25, 0x01	; 1
 5fa:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(4,Fila2);
 5fe:	61 e0       	ldi	r22, 0x01	; 1
 600:	84 e0       	ldi	r24, 0x04	; 4
 602:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String(Buffer2);
 606:	88 ee       	ldi	r24, 0xE8	; 232
 608:	91 e0       	ldi	r25, 0x01	; 1
 60a:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(15,Fila2);
 60e:	61 e0       	ldi	r22, 0x01	; 1
 610:	8f e0       	ldi	r24, 0x0F	; 15
 612:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String(Buffer3);
 616:	8c ec       	ldi	r24, 0xCC	; 204
 618:	91 e0       	ldi	r25, 0x01	; 1
 61a:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(4,Fila3);
 61e:	62 e0       	ldi	r22, 0x02	; 2
 620:	84 e0       	ldi	r24, 0x04	; 4
 622:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String(Buffer4);
 626:	8a e9       	ldi	r24, 0x9A	; 154
 628:	91 e0       	ldi	r25, 0x01	; 1
 62a:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(15,Fila3);
 62e:	62 e0       	ldi	r22, 0x02	; 2
 630:	8f e0       	ldi	r24, 0x0F	; 15
 632:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String(Buffer5);
 636:	86 e6       	ldi	r24, 0x66	; 102
 638:	91 e0       	ldi	r25, 0x01	; 1
 63a:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(4,Fila4);
 63e:	63 e0       	ldi	r22, 0x03	; 3
 640:	84 e0       	ldi	r24, 0x04	; 4
 642:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String(Buffer6);
 646:	82 e8       	ldi	r24, 0x82	; 130
 648:	91 e0       	ldi	r25, 0x01	; 1
 64a:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(15,Fila4);
 64e:	63 e0       	ldi	r22, 0x03	; 3
 650:	8f e0       	ldi	r24, 0x0F	; 15
 652:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String(Buffer7);
 656:	8e e4       	ldi	r24, 0x4E	; 78
 658:	91 e0       	ldi	r25, 0x01	; 1
 65a:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_AVR_Print_String>
 65e:	df 91       	pop	r29
 660:	cf 91       	pop	r28
 662:	08 95       	ret

00000664 <main>:
void Ejemplo1(void);
void Ejemplo2(void);

int main(void)
{
	ADC_Init();
 664:	0e 94 53 00 	call	0xa6	; 0xa6 <ADC_Init>
    LCD_AVR_Init();
 668:	0e 94 be 00 	call	0x17c	; 0x17c <LCD_AVR_Init>
	LCD_AVR_Set_Cursor(0,Fila1);
 66c:	60 e0       	ldi	r22, 0x00	; 0
 66e:	80 e0       	ldi	r24, 0x00	; 0
 670:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String("P0:");
 674:	8b e0       	ldi	r24, 0x0B	; 11
 676:	91 e0       	ldi	r25, 0x01	; 1
 678:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(12,Fila1);
 67c:	60 e0       	ldi	r22, 0x00	; 0
 67e:	8c e0       	ldi	r24, 0x0C	; 12
 680:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String("P1:");
 684:	8f e0       	ldi	r24, 0x0F	; 15
 686:	91 e0       	ldi	r25, 0x01	; 1
 688:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(0,Fila2);
 68c:	61 e0       	ldi	r22, 0x01	; 1
 68e:	80 e0       	ldi	r24, 0x00	; 0
 690:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String("P2:");
 694:	83 e1       	ldi	r24, 0x13	; 19
 696:	91 e0       	ldi	r25, 0x01	; 1
 698:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(12,Fila2);
 69c:	61 e0       	ldi	r22, 0x01	; 1
 69e:	8c e0       	ldi	r24, 0x0C	; 12
 6a0:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String("P3:");
 6a4:	87 e1       	ldi	r24, 0x17	; 23
 6a6:	91 e0       	ldi	r25, 0x01	; 1
 6a8:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(0,Fila3);
 6ac:	62 e0       	ldi	r22, 0x02	; 2
 6ae:	80 e0       	ldi	r24, 0x00	; 0
 6b0:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String("P4:");
 6b4:	8b e1       	ldi	r24, 0x1B	; 27
 6b6:	91 e0       	ldi	r25, 0x01	; 1
 6b8:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(12,Fila3);
 6bc:	62 e0       	ldi	r22, 0x02	; 2
 6be:	8c e0       	ldi	r24, 0x0C	; 12
 6c0:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String("P5:");
 6c4:	8f e1       	ldi	r24, 0x1F	; 31
 6c6:	91 e0       	ldi	r25, 0x01	; 1
 6c8:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(0,Fila4);
 6cc:	63 e0       	ldi	r22, 0x03	; 3
 6ce:	80 e0       	ldi	r24, 0x00	; 0
 6d0:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String("P6:");
 6d4:	83 e2       	ldi	r24, 0x23	; 35
 6d6:	91 e0       	ldi	r25, 0x01	; 1
 6d8:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_AVR_Print_String>
	LCD_AVR_Set_Cursor(12,Fila4);
 6dc:	63 e0       	ldi	r22, 0x03	; 3
 6de:	8c e0       	ldi	r24, 0x0C	; 12
 6e0:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String("P7:");
 6e4:	87 e2       	ldi	r24, 0x27	; 39
 6e6:	91 e0       	ldi	r25, 0x01	; 1
 6e8:	0e 94 4e 01 	call	0x29c	; 0x29c <LCD_AVR_Print_String>
	
	
	
    while (1) 
    {
		Ejemplo2();
 6ec:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <Ejemplo2>
 6f0:	fd cf       	rjmp	.-6      	; 0x6ec <main+0x88>

000006f2 <__divsf3>:
 6f2:	0e 94 8d 03 	call	0x71a	; 0x71a <__divsf3x>
 6f6:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__fp_round>
 6fa:	0e 94 38 04 	call	0x870	; 0x870 <__fp_pscB>
 6fe:	58 f0       	brcs	.+22     	; 0x716 <__divsf3+0x24>
 700:	0e 94 31 04 	call	0x862	; 0x862 <__fp_pscA>
 704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0x24>
 706:	29 f4       	brne	.+10     	; 0x712 <__divsf3+0x20>
 708:	5f 3f       	cpi	r21, 0xFF	; 255
 70a:	29 f0       	breq	.+10     	; 0x716 <__divsf3+0x24>
 70c:	0c 94 28 04 	jmp	0x850	; 0x850 <__fp_inf>
 710:	51 11       	cpse	r21, r1
 712:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__fp_szero>
 716:	0c 94 2e 04 	jmp	0x85c	; 0x85c <__fp_nan>

0000071a <__divsf3x>:
 71a:	0e 94 50 04 	call	0x8a0	; 0x8a0 <__fp_split3>
 71e:	68 f3       	brcs	.-38     	; 0x6fa <__divsf3+0x8>

00000720 <__divsf3_pse>:
 720:	99 23       	and	r25, r25
 722:	b1 f3       	breq	.-20     	; 0x710 <__divsf3+0x1e>
 724:	55 23       	and	r21, r21
 726:	91 f3       	breq	.-28     	; 0x70c <__divsf3+0x1a>
 728:	95 1b       	sub	r25, r21
 72a:	55 0b       	sbc	r21, r21
 72c:	bb 27       	eor	r27, r27
 72e:	aa 27       	eor	r26, r26
 730:	62 17       	cp	r22, r18
 732:	73 07       	cpc	r23, r19
 734:	84 07       	cpc	r24, r20
 736:	38 f0       	brcs	.+14     	; 0x746 <__divsf3_pse+0x26>
 738:	9f 5f       	subi	r25, 0xFF	; 255
 73a:	5f 4f       	sbci	r21, 0xFF	; 255
 73c:	22 0f       	add	r18, r18
 73e:	33 1f       	adc	r19, r19
 740:	44 1f       	adc	r20, r20
 742:	aa 1f       	adc	r26, r26
 744:	a9 f3       	breq	.-22     	; 0x730 <__divsf3_pse+0x10>
 746:	35 d0       	rcall	.+106    	; 0x7b2 <__divsf3_pse+0x92>
 748:	0e 2e       	mov	r0, r30
 74a:	3a f0       	brmi	.+14     	; 0x75a <__divsf3_pse+0x3a>
 74c:	e0 e8       	ldi	r30, 0x80	; 128
 74e:	32 d0       	rcall	.+100    	; 0x7b4 <__divsf3_pse+0x94>
 750:	91 50       	subi	r25, 0x01	; 1
 752:	50 40       	sbci	r21, 0x00	; 0
 754:	e6 95       	lsr	r30
 756:	00 1c       	adc	r0, r0
 758:	ca f7       	brpl	.-14     	; 0x74c <__divsf3_pse+0x2c>
 75a:	2b d0       	rcall	.+86     	; 0x7b2 <__divsf3_pse+0x92>
 75c:	fe 2f       	mov	r31, r30
 75e:	29 d0       	rcall	.+82     	; 0x7b2 <__divsf3_pse+0x92>
 760:	66 0f       	add	r22, r22
 762:	77 1f       	adc	r23, r23
 764:	88 1f       	adc	r24, r24
 766:	bb 1f       	adc	r27, r27
 768:	26 17       	cp	r18, r22
 76a:	37 07       	cpc	r19, r23
 76c:	48 07       	cpc	r20, r24
 76e:	ab 07       	cpc	r26, r27
 770:	b0 e8       	ldi	r27, 0x80	; 128
 772:	09 f0       	breq	.+2      	; 0x776 <__divsf3_pse+0x56>
 774:	bb 0b       	sbc	r27, r27
 776:	80 2d       	mov	r24, r0
 778:	bf 01       	movw	r22, r30
 77a:	ff 27       	eor	r31, r31
 77c:	93 58       	subi	r25, 0x83	; 131
 77e:	5f 4f       	sbci	r21, 0xFF	; 255
 780:	3a f0       	brmi	.+14     	; 0x790 <__divsf3_pse+0x70>
 782:	9e 3f       	cpi	r25, 0xFE	; 254
 784:	51 05       	cpc	r21, r1
 786:	78 f0       	brcs	.+30     	; 0x7a6 <__divsf3_pse+0x86>
 788:	0c 94 28 04 	jmp	0x850	; 0x850 <__fp_inf>
 78c:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__fp_szero>
 790:	5f 3f       	cpi	r21, 0xFF	; 255
 792:	e4 f3       	brlt	.-8      	; 0x78c <__divsf3_pse+0x6c>
 794:	98 3e       	cpi	r25, 0xE8	; 232
 796:	d4 f3       	brlt	.-12     	; 0x78c <__divsf3_pse+0x6c>
 798:	86 95       	lsr	r24
 79a:	77 95       	ror	r23
 79c:	67 95       	ror	r22
 79e:	b7 95       	ror	r27
 7a0:	f7 95       	ror	r31
 7a2:	9f 5f       	subi	r25, 0xFF	; 255
 7a4:	c9 f7       	brne	.-14     	; 0x798 <__divsf3_pse+0x78>
 7a6:	88 0f       	add	r24, r24
 7a8:	91 1d       	adc	r25, r1
 7aa:	96 95       	lsr	r25
 7ac:	87 95       	ror	r24
 7ae:	97 f9       	bld	r25, 7
 7b0:	08 95       	ret
 7b2:	e1 e0       	ldi	r30, 0x01	; 1
 7b4:	66 0f       	add	r22, r22
 7b6:	77 1f       	adc	r23, r23
 7b8:	88 1f       	adc	r24, r24
 7ba:	bb 1f       	adc	r27, r27
 7bc:	62 17       	cp	r22, r18
 7be:	73 07       	cpc	r23, r19
 7c0:	84 07       	cpc	r24, r20
 7c2:	ba 07       	cpc	r27, r26
 7c4:	20 f0       	brcs	.+8      	; 0x7ce <__divsf3_pse+0xae>
 7c6:	62 1b       	sub	r22, r18
 7c8:	73 0b       	sbc	r23, r19
 7ca:	84 0b       	sbc	r24, r20
 7cc:	ba 0b       	sbc	r27, r26
 7ce:	ee 1f       	adc	r30, r30
 7d0:	88 f7       	brcc	.-30     	; 0x7b4 <__divsf3_pse+0x94>
 7d2:	e0 95       	com	r30
 7d4:	08 95       	ret

000007d6 <__floatunsisf>:
 7d6:	e8 94       	clt
 7d8:	09 c0       	rjmp	.+18     	; 0x7ec <__floatsisf+0x12>

000007da <__floatsisf>:
 7da:	97 fb       	bst	r25, 7
 7dc:	3e f4       	brtc	.+14     	; 0x7ec <__floatsisf+0x12>
 7de:	90 95       	com	r25
 7e0:	80 95       	com	r24
 7e2:	70 95       	com	r23
 7e4:	61 95       	neg	r22
 7e6:	7f 4f       	sbci	r23, 0xFF	; 255
 7e8:	8f 4f       	sbci	r24, 0xFF	; 255
 7ea:	9f 4f       	sbci	r25, 0xFF	; 255
 7ec:	99 23       	and	r25, r25
 7ee:	a9 f0       	breq	.+42     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 7f0:	f9 2f       	mov	r31, r25
 7f2:	96 e9       	ldi	r25, 0x96	; 150
 7f4:	bb 27       	eor	r27, r27
 7f6:	93 95       	inc	r25
 7f8:	f6 95       	lsr	r31
 7fa:	87 95       	ror	r24
 7fc:	77 95       	ror	r23
 7fe:	67 95       	ror	r22
 800:	b7 95       	ror	r27
 802:	f1 11       	cpse	r31, r1
 804:	f8 cf       	rjmp	.-16     	; 0x7f6 <__floatsisf+0x1c>
 806:	fa f4       	brpl	.+62     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 808:	bb 0f       	add	r27, r27
 80a:	11 f4       	brne	.+4      	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 80c:	60 ff       	sbrs	r22, 0
 80e:	1b c0       	rjmp	.+54     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 810:	6f 5f       	subi	r22, 0xFF	; 255
 812:	7f 4f       	sbci	r23, 0xFF	; 255
 814:	8f 4f       	sbci	r24, 0xFF	; 255
 816:	9f 4f       	sbci	r25, 0xFF	; 255
 818:	16 c0       	rjmp	.+44     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 81a:	88 23       	and	r24, r24
 81c:	11 f0       	breq	.+4      	; 0x822 <__DATA_REGION_LENGTH__+0x22>
 81e:	96 e9       	ldi	r25, 0x96	; 150
 820:	11 c0       	rjmp	.+34     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 822:	77 23       	and	r23, r23
 824:	21 f0       	breq	.+8      	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 826:	9e e8       	ldi	r25, 0x8E	; 142
 828:	87 2f       	mov	r24, r23
 82a:	76 2f       	mov	r23, r22
 82c:	05 c0       	rjmp	.+10     	; 0x838 <__DATA_REGION_LENGTH__+0x38>
 82e:	66 23       	and	r22, r22
 830:	71 f0       	breq	.+28     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 832:	96 e8       	ldi	r25, 0x86	; 134
 834:	86 2f       	mov	r24, r22
 836:	70 e0       	ldi	r23, 0x00	; 0
 838:	60 e0       	ldi	r22, 0x00	; 0
 83a:	2a f0       	brmi	.+10     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 83c:	9a 95       	dec	r25
 83e:	66 0f       	add	r22, r22
 840:	77 1f       	adc	r23, r23
 842:	88 1f       	adc	r24, r24
 844:	da f7       	brpl	.-10     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 846:	88 0f       	add	r24, r24
 848:	96 95       	lsr	r25
 84a:	87 95       	ror	r24
 84c:	97 f9       	bld	r25, 7
 84e:	08 95       	ret

00000850 <__fp_inf>:
 850:	97 f9       	bld	r25, 7
 852:	9f 67       	ori	r25, 0x7F	; 127
 854:	80 e8       	ldi	r24, 0x80	; 128
 856:	70 e0       	ldi	r23, 0x00	; 0
 858:	60 e0       	ldi	r22, 0x00	; 0
 85a:	08 95       	ret

0000085c <__fp_nan>:
 85c:	9f ef       	ldi	r25, 0xFF	; 255
 85e:	80 ec       	ldi	r24, 0xC0	; 192
 860:	08 95       	ret

00000862 <__fp_pscA>:
 862:	00 24       	eor	r0, r0
 864:	0a 94       	dec	r0
 866:	16 16       	cp	r1, r22
 868:	17 06       	cpc	r1, r23
 86a:	18 06       	cpc	r1, r24
 86c:	09 06       	cpc	r0, r25
 86e:	08 95       	ret

00000870 <__fp_pscB>:
 870:	00 24       	eor	r0, r0
 872:	0a 94       	dec	r0
 874:	12 16       	cp	r1, r18
 876:	13 06       	cpc	r1, r19
 878:	14 06       	cpc	r1, r20
 87a:	05 06       	cpc	r0, r21
 87c:	08 95       	ret

0000087e <__fp_round>:
 87e:	09 2e       	mov	r0, r25
 880:	03 94       	inc	r0
 882:	00 0c       	add	r0, r0
 884:	11 f4       	brne	.+4      	; 0x88a <__fp_round+0xc>
 886:	88 23       	and	r24, r24
 888:	52 f0       	brmi	.+20     	; 0x89e <__fp_round+0x20>
 88a:	bb 0f       	add	r27, r27
 88c:	40 f4       	brcc	.+16     	; 0x89e <__fp_round+0x20>
 88e:	bf 2b       	or	r27, r31
 890:	11 f4       	brne	.+4      	; 0x896 <__fp_round+0x18>
 892:	60 ff       	sbrs	r22, 0
 894:	04 c0       	rjmp	.+8      	; 0x89e <__fp_round+0x20>
 896:	6f 5f       	subi	r22, 0xFF	; 255
 898:	7f 4f       	sbci	r23, 0xFF	; 255
 89a:	8f 4f       	sbci	r24, 0xFF	; 255
 89c:	9f 4f       	sbci	r25, 0xFF	; 255
 89e:	08 95       	ret

000008a0 <__fp_split3>:
 8a0:	57 fd       	sbrc	r21, 7
 8a2:	90 58       	subi	r25, 0x80	; 128
 8a4:	44 0f       	add	r20, r20
 8a6:	55 1f       	adc	r21, r21
 8a8:	59 f0       	breq	.+22     	; 0x8c0 <__fp_splitA+0x10>
 8aa:	5f 3f       	cpi	r21, 0xFF	; 255
 8ac:	71 f0       	breq	.+28     	; 0x8ca <__fp_splitA+0x1a>
 8ae:	47 95       	ror	r20

000008b0 <__fp_splitA>:
 8b0:	88 0f       	add	r24, r24
 8b2:	97 fb       	bst	r25, 7
 8b4:	99 1f       	adc	r25, r25
 8b6:	61 f0       	breq	.+24     	; 0x8d0 <__fp_splitA+0x20>
 8b8:	9f 3f       	cpi	r25, 0xFF	; 255
 8ba:	79 f0       	breq	.+30     	; 0x8da <__fp_splitA+0x2a>
 8bc:	87 95       	ror	r24
 8be:	08 95       	ret
 8c0:	12 16       	cp	r1, r18
 8c2:	13 06       	cpc	r1, r19
 8c4:	14 06       	cpc	r1, r20
 8c6:	55 1f       	adc	r21, r21
 8c8:	f2 cf       	rjmp	.-28     	; 0x8ae <__fp_split3+0xe>
 8ca:	46 95       	lsr	r20
 8cc:	f1 df       	rcall	.-30     	; 0x8b0 <__fp_splitA>
 8ce:	08 c0       	rjmp	.+16     	; 0x8e0 <__fp_splitA+0x30>
 8d0:	16 16       	cp	r1, r22
 8d2:	17 06       	cpc	r1, r23
 8d4:	18 06       	cpc	r1, r24
 8d6:	99 1f       	adc	r25, r25
 8d8:	f1 cf       	rjmp	.-30     	; 0x8bc <__fp_splitA+0xc>
 8da:	86 95       	lsr	r24
 8dc:	71 05       	cpc	r23, r1
 8de:	61 05       	cpc	r22, r1
 8e0:	08 94       	sec
 8e2:	08 95       	ret

000008e4 <__fp_zero>:
 8e4:	e8 94       	clt

000008e6 <__fp_szero>:
 8e6:	bb 27       	eor	r27, r27
 8e8:	66 27       	eor	r22, r22
 8ea:	77 27       	eor	r23, r23
 8ec:	cb 01       	movw	r24, r22
 8ee:	97 f9       	bld	r25, 7
 8f0:	08 95       	ret

000008f2 <__mulsf3>:
 8f2:	0e 94 8c 04 	call	0x918	; 0x918 <__mulsf3x>
 8f6:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__fp_round>
 8fa:	0e 94 31 04 	call	0x862	; 0x862 <__fp_pscA>
 8fe:	38 f0       	brcs	.+14     	; 0x90e <__stack+0xf>
 900:	0e 94 38 04 	call	0x870	; 0x870 <__fp_pscB>
 904:	20 f0       	brcs	.+8      	; 0x90e <__stack+0xf>
 906:	95 23       	and	r25, r21
 908:	11 f0       	breq	.+4      	; 0x90e <__stack+0xf>
 90a:	0c 94 28 04 	jmp	0x850	; 0x850 <__fp_inf>
 90e:	0c 94 2e 04 	jmp	0x85c	; 0x85c <__fp_nan>
 912:	11 24       	eor	r1, r1
 914:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__fp_szero>

00000918 <__mulsf3x>:
 918:	0e 94 50 04 	call	0x8a0	; 0x8a0 <__fp_split3>
 91c:	70 f3       	brcs	.-36     	; 0x8fa <__mulsf3+0x8>

0000091e <__mulsf3_pse>:
 91e:	95 9f       	mul	r25, r21
 920:	c1 f3       	breq	.-16     	; 0x912 <__stack+0x13>
 922:	95 0f       	add	r25, r21
 924:	50 e0       	ldi	r21, 0x00	; 0
 926:	55 1f       	adc	r21, r21
 928:	62 9f       	mul	r22, r18
 92a:	f0 01       	movw	r30, r0
 92c:	72 9f       	mul	r23, r18
 92e:	bb 27       	eor	r27, r27
 930:	f0 0d       	add	r31, r0
 932:	b1 1d       	adc	r27, r1
 934:	63 9f       	mul	r22, r19
 936:	aa 27       	eor	r26, r26
 938:	f0 0d       	add	r31, r0
 93a:	b1 1d       	adc	r27, r1
 93c:	aa 1f       	adc	r26, r26
 93e:	64 9f       	mul	r22, r20
 940:	66 27       	eor	r22, r22
 942:	b0 0d       	add	r27, r0
 944:	a1 1d       	adc	r26, r1
 946:	66 1f       	adc	r22, r22
 948:	82 9f       	mul	r24, r18
 94a:	22 27       	eor	r18, r18
 94c:	b0 0d       	add	r27, r0
 94e:	a1 1d       	adc	r26, r1
 950:	62 1f       	adc	r22, r18
 952:	73 9f       	mul	r23, r19
 954:	b0 0d       	add	r27, r0
 956:	a1 1d       	adc	r26, r1
 958:	62 1f       	adc	r22, r18
 95a:	83 9f       	mul	r24, r19
 95c:	a0 0d       	add	r26, r0
 95e:	61 1d       	adc	r22, r1
 960:	22 1f       	adc	r18, r18
 962:	74 9f       	mul	r23, r20
 964:	33 27       	eor	r19, r19
 966:	a0 0d       	add	r26, r0
 968:	61 1d       	adc	r22, r1
 96a:	23 1f       	adc	r18, r19
 96c:	84 9f       	mul	r24, r20
 96e:	60 0d       	add	r22, r0
 970:	21 1d       	adc	r18, r1
 972:	82 2f       	mov	r24, r18
 974:	76 2f       	mov	r23, r22
 976:	6a 2f       	mov	r22, r26
 978:	11 24       	eor	r1, r1
 97a:	9f 57       	subi	r25, 0x7F	; 127
 97c:	50 40       	sbci	r21, 0x00	; 0
 97e:	9a f0       	brmi	.+38     	; 0x9a6 <__mulsf3_pse+0x88>
 980:	f1 f0       	breq	.+60     	; 0x9be <__mulsf3_pse+0xa0>
 982:	88 23       	and	r24, r24
 984:	4a f0       	brmi	.+18     	; 0x998 <__mulsf3_pse+0x7a>
 986:	ee 0f       	add	r30, r30
 988:	ff 1f       	adc	r31, r31
 98a:	bb 1f       	adc	r27, r27
 98c:	66 1f       	adc	r22, r22
 98e:	77 1f       	adc	r23, r23
 990:	88 1f       	adc	r24, r24
 992:	91 50       	subi	r25, 0x01	; 1
 994:	50 40       	sbci	r21, 0x00	; 0
 996:	a9 f7       	brne	.-22     	; 0x982 <__mulsf3_pse+0x64>
 998:	9e 3f       	cpi	r25, 0xFE	; 254
 99a:	51 05       	cpc	r21, r1
 99c:	80 f0       	brcs	.+32     	; 0x9be <__mulsf3_pse+0xa0>
 99e:	0c 94 28 04 	jmp	0x850	; 0x850 <__fp_inf>
 9a2:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__fp_szero>
 9a6:	5f 3f       	cpi	r21, 0xFF	; 255
 9a8:	e4 f3       	brlt	.-8      	; 0x9a2 <__mulsf3_pse+0x84>
 9aa:	98 3e       	cpi	r25, 0xE8	; 232
 9ac:	d4 f3       	brlt	.-12     	; 0x9a2 <__mulsf3_pse+0x84>
 9ae:	86 95       	lsr	r24
 9b0:	77 95       	ror	r23
 9b2:	67 95       	ror	r22
 9b4:	b7 95       	ror	r27
 9b6:	f7 95       	ror	r31
 9b8:	e7 95       	ror	r30
 9ba:	9f 5f       	subi	r25, 0xFF	; 255
 9bc:	c1 f7       	brne	.-16     	; 0x9ae <__mulsf3_pse+0x90>
 9be:	fe 2b       	or	r31, r30
 9c0:	88 0f       	add	r24, r24
 9c2:	91 1d       	adc	r25, r1
 9c4:	96 95       	lsr	r25
 9c6:	87 95       	ror	r24
 9c8:	97 f9       	bld	r25, 7
 9ca:	08 95       	ret

000009cc <sprintf>:
 9cc:	ae e0       	ldi	r26, 0x0E	; 14
 9ce:	b0 e0       	ldi	r27, 0x00	; 0
 9d0:	ec ee       	ldi	r30, 0xEC	; 236
 9d2:	f4 e0       	ldi	r31, 0x04	; 4
 9d4:	0c 94 a7 07 	jmp	0xf4e	; 0xf4e <__prologue_saves__+0x1c>
 9d8:	0d 89       	ldd	r16, Y+21	; 0x15
 9da:	1e 89       	ldd	r17, Y+22	; 0x16
 9dc:	86 e0       	ldi	r24, 0x06	; 6
 9de:	8c 83       	std	Y+4, r24	; 0x04
 9e0:	1a 83       	std	Y+2, r17	; 0x02
 9e2:	09 83       	std	Y+1, r16	; 0x01
 9e4:	8f ef       	ldi	r24, 0xFF	; 255
 9e6:	9f e7       	ldi	r25, 0x7F	; 127
 9e8:	9e 83       	std	Y+6, r25	; 0x06
 9ea:	8d 83       	std	Y+5, r24	; 0x05
 9ec:	ae 01       	movw	r20, r28
 9ee:	47 5e       	subi	r20, 0xE7	; 231
 9f0:	5f 4f       	sbci	r21, 0xFF	; 255
 9f2:	6f 89       	ldd	r22, Y+23	; 0x17
 9f4:	78 8d       	ldd	r23, Y+24	; 0x18
 9f6:	ce 01       	movw	r24, r28
 9f8:	01 96       	adiw	r24, 0x01	; 1
 9fa:	0e 94 08 05 	call	0xa10	; 0xa10 <vfprintf>
 9fe:	ef 81       	ldd	r30, Y+7	; 0x07
 a00:	f8 85       	ldd	r31, Y+8	; 0x08
 a02:	e0 0f       	add	r30, r16
 a04:	f1 1f       	adc	r31, r17
 a06:	10 82       	st	Z, r1
 a08:	2e 96       	adiw	r28, 0x0e	; 14
 a0a:	e4 e0       	ldi	r30, 0x04	; 4
 a0c:	0c 94 c3 07 	jmp	0xf86	; 0xf86 <__epilogue_restores__+0x1c>

00000a10 <vfprintf>:
 a10:	ab e0       	ldi	r26, 0x0B	; 11
 a12:	b0 e0       	ldi	r27, 0x00	; 0
 a14:	ee e0       	ldi	r30, 0x0E	; 14
 a16:	f5 e0       	ldi	r31, 0x05	; 5
 a18:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__prologue_saves__>
 a1c:	6c 01       	movw	r12, r24
 a1e:	7b 01       	movw	r14, r22
 a20:	8a 01       	movw	r16, r20
 a22:	fc 01       	movw	r30, r24
 a24:	17 82       	std	Z+7, r1	; 0x07
 a26:	16 82       	std	Z+6, r1	; 0x06
 a28:	83 81       	ldd	r24, Z+3	; 0x03
 a2a:	81 ff       	sbrs	r24, 1
 a2c:	cc c1       	rjmp	.+920    	; 0xdc6 <vfprintf+0x3b6>
 a2e:	ce 01       	movw	r24, r28
 a30:	01 96       	adiw	r24, 0x01	; 1
 a32:	3c 01       	movw	r6, r24
 a34:	f6 01       	movw	r30, r12
 a36:	93 81       	ldd	r25, Z+3	; 0x03
 a38:	f7 01       	movw	r30, r14
 a3a:	93 fd       	sbrc	r25, 3
 a3c:	85 91       	lpm	r24, Z+
 a3e:	93 ff       	sbrs	r25, 3
 a40:	81 91       	ld	r24, Z+
 a42:	7f 01       	movw	r14, r30
 a44:	88 23       	and	r24, r24
 a46:	09 f4       	brne	.+2      	; 0xa4a <vfprintf+0x3a>
 a48:	ba c1       	rjmp	.+884    	; 0xdbe <vfprintf+0x3ae>
 a4a:	85 32       	cpi	r24, 0x25	; 37
 a4c:	39 f4       	brne	.+14     	; 0xa5c <vfprintf+0x4c>
 a4e:	93 fd       	sbrc	r25, 3
 a50:	85 91       	lpm	r24, Z+
 a52:	93 ff       	sbrs	r25, 3
 a54:	81 91       	ld	r24, Z+
 a56:	7f 01       	movw	r14, r30
 a58:	85 32       	cpi	r24, 0x25	; 37
 a5a:	29 f4       	brne	.+10     	; 0xa66 <vfprintf+0x56>
 a5c:	b6 01       	movw	r22, r12
 a5e:	90 e0       	ldi	r25, 0x00	; 0
 a60:	0e 94 ff 06 	call	0xdfe	; 0xdfe <fputc>
 a64:	e7 cf       	rjmp	.-50     	; 0xa34 <vfprintf+0x24>
 a66:	91 2c       	mov	r9, r1
 a68:	21 2c       	mov	r2, r1
 a6a:	31 2c       	mov	r3, r1
 a6c:	ff e1       	ldi	r31, 0x1F	; 31
 a6e:	f3 15       	cp	r31, r3
 a70:	d8 f0       	brcs	.+54     	; 0xaa8 <vfprintf+0x98>
 a72:	8b 32       	cpi	r24, 0x2B	; 43
 a74:	79 f0       	breq	.+30     	; 0xa94 <vfprintf+0x84>
 a76:	38 f4       	brcc	.+14     	; 0xa86 <vfprintf+0x76>
 a78:	80 32       	cpi	r24, 0x20	; 32
 a7a:	79 f0       	breq	.+30     	; 0xa9a <vfprintf+0x8a>
 a7c:	83 32       	cpi	r24, 0x23	; 35
 a7e:	a1 f4       	brne	.+40     	; 0xaa8 <vfprintf+0x98>
 a80:	23 2d       	mov	r18, r3
 a82:	20 61       	ori	r18, 0x10	; 16
 a84:	1d c0       	rjmp	.+58     	; 0xac0 <vfprintf+0xb0>
 a86:	8d 32       	cpi	r24, 0x2D	; 45
 a88:	61 f0       	breq	.+24     	; 0xaa2 <vfprintf+0x92>
 a8a:	80 33       	cpi	r24, 0x30	; 48
 a8c:	69 f4       	brne	.+26     	; 0xaa8 <vfprintf+0x98>
 a8e:	23 2d       	mov	r18, r3
 a90:	21 60       	ori	r18, 0x01	; 1
 a92:	16 c0       	rjmp	.+44     	; 0xac0 <vfprintf+0xb0>
 a94:	83 2d       	mov	r24, r3
 a96:	82 60       	ori	r24, 0x02	; 2
 a98:	38 2e       	mov	r3, r24
 a9a:	e3 2d       	mov	r30, r3
 a9c:	e4 60       	ori	r30, 0x04	; 4
 a9e:	3e 2e       	mov	r3, r30
 aa0:	2a c0       	rjmp	.+84     	; 0xaf6 <vfprintf+0xe6>
 aa2:	f3 2d       	mov	r31, r3
 aa4:	f8 60       	ori	r31, 0x08	; 8
 aa6:	1d c0       	rjmp	.+58     	; 0xae2 <vfprintf+0xd2>
 aa8:	37 fc       	sbrc	r3, 7
 aaa:	2d c0       	rjmp	.+90     	; 0xb06 <vfprintf+0xf6>
 aac:	20 ed       	ldi	r18, 0xD0	; 208
 aae:	28 0f       	add	r18, r24
 ab0:	2a 30       	cpi	r18, 0x0A	; 10
 ab2:	40 f0       	brcs	.+16     	; 0xac4 <vfprintf+0xb4>
 ab4:	8e 32       	cpi	r24, 0x2E	; 46
 ab6:	b9 f4       	brne	.+46     	; 0xae6 <vfprintf+0xd6>
 ab8:	36 fc       	sbrc	r3, 6
 aba:	81 c1       	rjmp	.+770    	; 0xdbe <vfprintf+0x3ae>
 abc:	23 2d       	mov	r18, r3
 abe:	20 64       	ori	r18, 0x40	; 64
 ac0:	32 2e       	mov	r3, r18
 ac2:	19 c0       	rjmp	.+50     	; 0xaf6 <vfprintf+0xe6>
 ac4:	36 fe       	sbrs	r3, 6
 ac6:	06 c0       	rjmp	.+12     	; 0xad4 <vfprintf+0xc4>
 ac8:	8a e0       	ldi	r24, 0x0A	; 10
 aca:	98 9e       	mul	r9, r24
 acc:	20 0d       	add	r18, r0
 ace:	11 24       	eor	r1, r1
 ad0:	92 2e       	mov	r9, r18
 ad2:	11 c0       	rjmp	.+34     	; 0xaf6 <vfprintf+0xe6>
 ad4:	ea e0       	ldi	r30, 0x0A	; 10
 ad6:	2e 9e       	mul	r2, r30
 ad8:	20 0d       	add	r18, r0
 ada:	11 24       	eor	r1, r1
 adc:	22 2e       	mov	r2, r18
 ade:	f3 2d       	mov	r31, r3
 ae0:	f0 62       	ori	r31, 0x20	; 32
 ae2:	3f 2e       	mov	r3, r31
 ae4:	08 c0       	rjmp	.+16     	; 0xaf6 <vfprintf+0xe6>
 ae6:	8c 36       	cpi	r24, 0x6C	; 108
 ae8:	21 f4       	brne	.+8      	; 0xaf2 <vfprintf+0xe2>
 aea:	83 2d       	mov	r24, r3
 aec:	80 68       	ori	r24, 0x80	; 128
 aee:	38 2e       	mov	r3, r24
 af0:	02 c0       	rjmp	.+4      	; 0xaf6 <vfprintf+0xe6>
 af2:	88 36       	cpi	r24, 0x68	; 104
 af4:	41 f4       	brne	.+16     	; 0xb06 <vfprintf+0xf6>
 af6:	f7 01       	movw	r30, r14
 af8:	93 fd       	sbrc	r25, 3
 afa:	85 91       	lpm	r24, Z+
 afc:	93 ff       	sbrs	r25, 3
 afe:	81 91       	ld	r24, Z+
 b00:	7f 01       	movw	r14, r30
 b02:	81 11       	cpse	r24, r1
 b04:	b3 cf       	rjmp	.-154    	; 0xa6c <vfprintf+0x5c>
 b06:	98 2f       	mov	r25, r24
 b08:	9f 7d       	andi	r25, 0xDF	; 223
 b0a:	95 54       	subi	r25, 0x45	; 69
 b0c:	93 30       	cpi	r25, 0x03	; 3
 b0e:	28 f4       	brcc	.+10     	; 0xb1a <vfprintf+0x10a>
 b10:	0c 5f       	subi	r16, 0xFC	; 252
 b12:	1f 4f       	sbci	r17, 0xFF	; 255
 b14:	9f e3       	ldi	r25, 0x3F	; 63
 b16:	99 83       	std	Y+1, r25	; 0x01
 b18:	0d c0       	rjmp	.+26     	; 0xb34 <vfprintf+0x124>
 b1a:	83 36       	cpi	r24, 0x63	; 99
 b1c:	31 f0       	breq	.+12     	; 0xb2a <vfprintf+0x11a>
 b1e:	83 37       	cpi	r24, 0x73	; 115
 b20:	71 f0       	breq	.+28     	; 0xb3e <vfprintf+0x12e>
 b22:	83 35       	cpi	r24, 0x53	; 83
 b24:	09 f0       	breq	.+2      	; 0xb28 <vfprintf+0x118>
 b26:	59 c0       	rjmp	.+178    	; 0xbda <vfprintf+0x1ca>
 b28:	21 c0       	rjmp	.+66     	; 0xb6c <vfprintf+0x15c>
 b2a:	f8 01       	movw	r30, r16
 b2c:	80 81       	ld	r24, Z
 b2e:	89 83       	std	Y+1, r24	; 0x01
 b30:	0e 5f       	subi	r16, 0xFE	; 254
 b32:	1f 4f       	sbci	r17, 0xFF	; 255
 b34:	88 24       	eor	r8, r8
 b36:	83 94       	inc	r8
 b38:	91 2c       	mov	r9, r1
 b3a:	53 01       	movw	r10, r6
 b3c:	13 c0       	rjmp	.+38     	; 0xb64 <vfprintf+0x154>
 b3e:	28 01       	movw	r4, r16
 b40:	f2 e0       	ldi	r31, 0x02	; 2
 b42:	4f 0e       	add	r4, r31
 b44:	51 1c       	adc	r5, r1
 b46:	f8 01       	movw	r30, r16
 b48:	a0 80       	ld	r10, Z
 b4a:	b1 80       	ldd	r11, Z+1	; 0x01
 b4c:	36 fe       	sbrs	r3, 6
 b4e:	03 c0       	rjmp	.+6      	; 0xb56 <vfprintf+0x146>
 b50:	69 2d       	mov	r22, r9
 b52:	70 e0       	ldi	r23, 0x00	; 0
 b54:	02 c0       	rjmp	.+4      	; 0xb5a <vfprintf+0x14a>
 b56:	6f ef       	ldi	r22, 0xFF	; 255
 b58:	7f ef       	ldi	r23, 0xFF	; 255
 b5a:	c5 01       	movw	r24, r10
 b5c:	0e 94 f4 06 	call	0xde8	; 0xde8 <strnlen>
 b60:	4c 01       	movw	r8, r24
 b62:	82 01       	movw	r16, r4
 b64:	f3 2d       	mov	r31, r3
 b66:	ff 77       	andi	r31, 0x7F	; 127
 b68:	3f 2e       	mov	r3, r31
 b6a:	16 c0       	rjmp	.+44     	; 0xb98 <vfprintf+0x188>
 b6c:	28 01       	movw	r4, r16
 b6e:	22 e0       	ldi	r18, 0x02	; 2
 b70:	42 0e       	add	r4, r18
 b72:	51 1c       	adc	r5, r1
 b74:	f8 01       	movw	r30, r16
 b76:	a0 80       	ld	r10, Z
 b78:	b1 80       	ldd	r11, Z+1	; 0x01
 b7a:	36 fe       	sbrs	r3, 6
 b7c:	03 c0       	rjmp	.+6      	; 0xb84 <vfprintf+0x174>
 b7e:	69 2d       	mov	r22, r9
 b80:	70 e0       	ldi	r23, 0x00	; 0
 b82:	02 c0       	rjmp	.+4      	; 0xb88 <vfprintf+0x178>
 b84:	6f ef       	ldi	r22, 0xFF	; 255
 b86:	7f ef       	ldi	r23, 0xFF	; 255
 b88:	c5 01       	movw	r24, r10
 b8a:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <strnlen_P>
 b8e:	4c 01       	movw	r8, r24
 b90:	f3 2d       	mov	r31, r3
 b92:	f0 68       	ori	r31, 0x80	; 128
 b94:	3f 2e       	mov	r3, r31
 b96:	82 01       	movw	r16, r4
 b98:	33 fc       	sbrc	r3, 3
 b9a:	1b c0       	rjmp	.+54     	; 0xbd2 <vfprintf+0x1c2>
 b9c:	82 2d       	mov	r24, r2
 b9e:	90 e0       	ldi	r25, 0x00	; 0
 ba0:	88 16       	cp	r8, r24
 ba2:	99 06       	cpc	r9, r25
 ba4:	b0 f4       	brcc	.+44     	; 0xbd2 <vfprintf+0x1c2>
 ba6:	b6 01       	movw	r22, r12
 ba8:	80 e2       	ldi	r24, 0x20	; 32
 baa:	90 e0       	ldi	r25, 0x00	; 0
 bac:	0e 94 ff 06 	call	0xdfe	; 0xdfe <fputc>
 bb0:	2a 94       	dec	r2
 bb2:	f4 cf       	rjmp	.-24     	; 0xb9c <vfprintf+0x18c>
 bb4:	f5 01       	movw	r30, r10
 bb6:	37 fc       	sbrc	r3, 7
 bb8:	85 91       	lpm	r24, Z+
 bba:	37 fe       	sbrs	r3, 7
 bbc:	81 91       	ld	r24, Z+
 bbe:	5f 01       	movw	r10, r30
 bc0:	b6 01       	movw	r22, r12
 bc2:	90 e0       	ldi	r25, 0x00	; 0
 bc4:	0e 94 ff 06 	call	0xdfe	; 0xdfe <fputc>
 bc8:	21 10       	cpse	r2, r1
 bca:	2a 94       	dec	r2
 bcc:	21 e0       	ldi	r18, 0x01	; 1
 bce:	82 1a       	sub	r8, r18
 bd0:	91 08       	sbc	r9, r1
 bd2:	81 14       	cp	r8, r1
 bd4:	91 04       	cpc	r9, r1
 bd6:	71 f7       	brne	.-36     	; 0xbb4 <vfprintf+0x1a4>
 bd8:	e8 c0       	rjmp	.+464    	; 0xdaa <vfprintf+0x39a>
 bda:	84 36       	cpi	r24, 0x64	; 100
 bdc:	11 f0       	breq	.+4      	; 0xbe2 <vfprintf+0x1d2>
 bde:	89 36       	cpi	r24, 0x69	; 105
 be0:	41 f5       	brne	.+80     	; 0xc32 <vfprintf+0x222>
 be2:	f8 01       	movw	r30, r16
 be4:	37 fe       	sbrs	r3, 7
 be6:	07 c0       	rjmp	.+14     	; 0xbf6 <vfprintf+0x1e6>
 be8:	60 81       	ld	r22, Z
 bea:	71 81       	ldd	r23, Z+1	; 0x01
 bec:	82 81       	ldd	r24, Z+2	; 0x02
 bee:	93 81       	ldd	r25, Z+3	; 0x03
 bf0:	0c 5f       	subi	r16, 0xFC	; 252
 bf2:	1f 4f       	sbci	r17, 0xFF	; 255
 bf4:	08 c0       	rjmp	.+16     	; 0xc06 <vfprintf+0x1f6>
 bf6:	60 81       	ld	r22, Z
 bf8:	71 81       	ldd	r23, Z+1	; 0x01
 bfa:	07 2e       	mov	r0, r23
 bfc:	00 0c       	add	r0, r0
 bfe:	88 0b       	sbc	r24, r24
 c00:	99 0b       	sbc	r25, r25
 c02:	0e 5f       	subi	r16, 0xFE	; 254
 c04:	1f 4f       	sbci	r17, 0xFF	; 255
 c06:	f3 2d       	mov	r31, r3
 c08:	ff 76       	andi	r31, 0x6F	; 111
 c0a:	3f 2e       	mov	r3, r31
 c0c:	97 ff       	sbrs	r25, 7
 c0e:	09 c0       	rjmp	.+18     	; 0xc22 <vfprintf+0x212>
 c10:	90 95       	com	r25
 c12:	80 95       	com	r24
 c14:	70 95       	com	r23
 c16:	61 95       	neg	r22
 c18:	7f 4f       	sbci	r23, 0xFF	; 255
 c1a:	8f 4f       	sbci	r24, 0xFF	; 255
 c1c:	9f 4f       	sbci	r25, 0xFF	; 255
 c1e:	f0 68       	ori	r31, 0x80	; 128
 c20:	3f 2e       	mov	r3, r31
 c22:	2a e0       	ldi	r18, 0x0A	; 10
 c24:	30 e0       	ldi	r19, 0x00	; 0
 c26:	a3 01       	movw	r20, r6
 c28:	0e 94 3b 07 	call	0xe76	; 0xe76 <__ultoa_invert>
 c2c:	88 2e       	mov	r8, r24
 c2e:	86 18       	sub	r8, r6
 c30:	45 c0       	rjmp	.+138    	; 0xcbc <vfprintf+0x2ac>
 c32:	85 37       	cpi	r24, 0x75	; 117
 c34:	31 f4       	brne	.+12     	; 0xc42 <vfprintf+0x232>
 c36:	23 2d       	mov	r18, r3
 c38:	2f 7e       	andi	r18, 0xEF	; 239
 c3a:	b2 2e       	mov	r11, r18
 c3c:	2a e0       	ldi	r18, 0x0A	; 10
 c3e:	30 e0       	ldi	r19, 0x00	; 0
 c40:	25 c0       	rjmp	.+74     	; 0xc8c <vfprintf+0x27c>
 c42:	93 2d       	mov	r25, r3
 c44:	99 7f       	andi	r25, 0xF9	; 249
 c46:	b9 2e       	mov	r11, r25
 c48:	8f 36       	cpi	r24, 0x6F	; 111
 c4a:	c1 f0       	breq	.+48     	; 0xc7c <vfprintf+0x26c>
 c4c:	18 f4       	brcc	.+6      	; 0xc54 <vfprintf+0x244>
 c4e:	88 35       	cpi	r24, 0x58	; 88
 c50:	79 f0       	breq	.+30     	; 0xc70 <vfprintf+0x260>
 c52:	b5 c0       	rjmp	.+362    	; 0xdbe <vfprintf+0x3ae>
 c54:	80 37       	cpi	r24, 0x70	; 112
 c56:	19 f0       	breq	.+6      	; 0xc5e <vfprintf+0x24e>
 c58:	88 37       	cpi	r24, 0x78	; 120
 c5a:	21 f0       	breq	.+8      	; 0xc64 <vfprintf+0x254>
 c5c:	b0 c0       	rjmp	.+352    	; 0xdbe <vfprintf+0x3ae>
 c5e:	e9 2f       	mov	r30, r25
 c60:	e0 61       	ori	r30, 0x10	; 16
 c62:	be 2e       	mov	r11, r30
 c64:	b4 fe       	sbrs	r11, 4
 c66:	0d c0       	rjmp	.+26     	; 0xc82 <vfprintf+0x272>
 c68:	fb 2d       	mov	r31, r11
 c6a:	f4 60       	ori	r31, 0x04	; 4
 c6c:	bf 2e       	mov	r11, r31
 c6e:	09 c0       	rjmp	.+18     	; 0xc82 <vfprintf+0x272>
 c70:	34 fe       	sbrs	r3, 4
 c72:	0a c0       	rjmp	.+20     	; 0xc88 <vfprintf+0x278>
 c74:	29 2f       	mov	r18, r25
 c76:	26 60       	ori	r18, 0x06	; 6
 c78:	b2 2e       	mov	r11, r18
 c7a:	06 c0       	rjmp	.+12     	; 0xc88 <vfprintf+0x278>
 c7c:	28 e0       	ldi	r18, 0x08	; 8
 c7e:	30 e0       	ldi	r19, 0x00	; 0
 c80:	05 c0       	rjmp	.+10     	; 0xc8c <vfprintf+0x27c>
 c82:	20 e1       	ldi	r18, 0x10	; 16
 c84:	30 e0       	ldi	r19, 0x00	; 0
 c86:	02 c0       	rjmp	.+4      	; 0xc8c <vfprintf+0x27c>
 c88:	20 e1       	ldi	r18, 0x10	; 16
 c8a:	32 e0       	ldi	r19, 0x02	; 2
 c8c:	f8 01       	movw	r30, r16
 c8e:	b7 fe       	sbrs	r11, 7
 c90:	07 c0       	rjmp	.+14     	; 0xca0 <vfprintf+0x290>
 c92:	60 81       	ld	r22, Z
 c94:	71 81       	ldd	r23, Z+1	; 0x01
 c96:	82 81       	ldd	r24, Z+2	; 0x02
 c98:	93 81       	ldd	r25, Z+3	; 0x03
 c9a:	0c 5f       	subi	r16, 0xFC	; 252
 c9c:	1f 4f       	sbci	r17, 0xFF	; 255
 c9e:	06 c0       	rjmp	.+12     	; 0xcac <vfprintf+0x29c>
 ca0:	60 81       	ld	r22, Z
 ca2:	71 81       	ldd	r23, Z+1	; 0x01
 ca4:	80 e0       	ldi	r24, 0x00	; 0
 ca6:	90 e0       	ldi	r25, 0x00	; 0
 ca8:	0e 5f       	subi	r16, 0xFE	; 254
 caa:	1f 4f       	sbci	r17, 0xFF	; 255
 cac:	a3 01       	movw	r20, r6
 cae:	0e 94 3b 07 	call	0xe76	; 0xe76 <__ultoa_invert>
 cb2:	88 2e       	mov	r8, r24
 cb4:	86 18       	sub	r8, r6
 cb6:	fb 2d       	mov	r31, r11
 cb8:	ff 77       	andi	r31, 0x7F	; 127
 cba:	3f 2e       	mov	r3, r31
 cbc:	36 fe       	sbrs	r3, 6
 cbe:	0d c0       	rjmp	.+26     	; 0xcda <vfprintf+0x2ca>
 cc0:	23 2d       	mov	r18, r3
 cc2:	2e 7f       	andi	r18, 0xFE	; 254
 cc4:	a2 2e       	mov	r10, r18
 cc6:	89 14       	cp	r8, r9
 cc8:	58 f4       	brcc	.+22     	; 0xce0 <vfprintf+0x2d0>
 cca:	34 fe       	sbrs	r3, 4
 ccc:	0b c0       	rjmp	.+22     	; 0xce4 <vfprintf+0x2d4>
 cce:	32 fc       	sbrc	r3, 2
 cd0:	09 c0       	rjmp	.+18     	; 0xce4 <vfprintf+0x2d4>
 cd2:	83 2d       	mov	r24, r3
 cd4:	8e 7e       	andi	r24, 0xEE	; 238
 cd6:	a8 2e       	mov	r10, r24
 cd8:	05 c0       	rjmp	.+10     	; 0xce4 <vfprintf+0x2d4>
 cda:	b8 2c       	mov	r11, r8
 cdc:	a3 2c       	mov	r10, r3
 cde:	03 c0       	rjmp	.+6      	; 0xce6 <vfprintf+0x2d6>
 ce0:	b8 2c       	mov	r11, r8
 ce2:	01 c0       	rjmp	.+2      	; 0xce6 <vfprintf+0x2d6>
 ce4:	b9 2c       	mov	r11, r9
 ce6:	a4 fe       	sbrs	r10, 4
 ce8:	0f c0       	rjmp	.+30     	; 0xd08 <vfprintf+0x2f8>
 cea:	fe 01       	movw	r30, r28
 cec:	e8 0d       	add	r30, r8
 cee:	f1 1d       	adc	r31, r1
 cf0:	80 81       	ld	r24, Z
 cf2:	80 33       	cpi	r24, 0x30	; 48
 cf4:	21 f4       	brne	.+8      	; 0xcfe <vfprintf+0x2ee>
 cf6:	9a 2d       	mov	r25, r10
 cf8:	99 7e       	andi	r25, 0xE9	; 233
 cfa:	a9 2e       	mov	r10, r25
 cfc:	09 c0       	rjmp	.+18     	; 0xd10 <vfprintf+0x300>
 cfe:	a2 fe       	sbrs	r10, 2
 d00:	06 c0       	rjmp	.+12     	; 0xd0e <vfprintf+0x2fe>
 d02:	b3 94       	inc	r11
 d04:	b3 94       	inc	r11
 d06:	04 c0       	rjmp	.+8      	; 0xd10 <vfprintf+0x300>
 d08:	8a 2d       	mov	r24, r10
 d0a:	86 78       	andi	r24, 0x86	; 134
 d0c:	09 f0       	breq	.+2      	; 0xd10 <vfprintf+0x300>
 d0e:	b3 94       	inc	r11
 d10:	a3 fc       	sbrc	r10, 3
 d12:	11 c0       	rjmp	.+34     	; 0xd36 <vfprintf+0x326>
 d14:	a0 fe       	sbrs	r10, 0
 d16:	06 c0       	rjmp	.+12     	; 0xd24 <vfprintf+0x314>
 d18:	b2 14       	cp	r11, r2
 d1a:	88 f4       	brcc	.+34     	; 0xd3e <vfprintf+0x32e>
 d1c:	28 0c       	add	r2, r8
 d1e:	92 2c       	mov	r9, r2
 d20:	9b 18       	sub	r9, r11
 d22:	0e c0       	rjmp	.+28     	; 0xd40 <vfprintf+0x330>
 d24:	b2 14       	cp	r11, r2
 d26:	60 f4       	brcc	.+24     	; 0xd40 <vfprintf+0x330>
 d28:	b6 01       	movw	r22, r12
 d2a:	80 e2       	ldi	r24, 0x20	; 32
 d2c:	90 e0       	ldi	r25, 0x00	; 0
 d2e:	0e 94 ff 06 	call	0xdfe	; 0xdfe <fputc>
 d32:	b3 94       	inc	r11
 d34:	f7 cf       	rjmp	.-18     	; 0xd24 <vfprintf+0x314>
 d36:	b2 14       	cp	r11, r2
 d38:	18 f4       	brcc	.+6      	; 0xd40 <vfprintf+0x330>
 d3a:	2b 18       	sub	r2, r11
 d3c:	02 c0       	rjmp	.+4      	; 0xd42 <vfprintf+0x332>
 d3e:	98 2c       	mov	r9, r8
 d40:	21 2c       	mov	r2, r1
 d42:	a4 fe       	sbrs	r10, 4
 d44:	10 c0       	rjmp	.+32     	; 0xd66 <vfprintf+0x356>
 d46:	b6 01       	movw	r22, r12
 d48:	80 e3       	ldi	r24, 0x30	; 48
 d4a:	90 e0       	ldi	r25, 0x00	; 0
 d4c:	0e 94 ff 06 	call	0xdfe	; 0xdfe <fputc>
 d50:	a2 fe       	sbrs	r10, 2
 d52:	17 c0       	rjmp	.+46     	; 0xd82 <vfprintf+0x372>
 d54:	a1 fc       	sbrc	r10, 1
 d56:	03 c0       	rjmp	.+6      	; 0xd5e <vfprintf+0x34e>
 d58:	88 e7       	ldi	r24, 0x78	; 120
 d5a:	90 e0       	ldi	r25, 0x00	; 0
 d5c:	02 c0       	rjmp	.+4      	; 0xd62 <vfprintf+0x352>
 d5e:	88 e5       	ldi	r24, 0x58	; 88
 d60:	90 e0       	ldi	r25, 0x00	; 0
 d62:	b6 01       	movw	r22, r12
 d64:	0c c0       	rjmp	.+24     	; 0xd7e <vfprintf+0x36e>
 d66:	8a 2d       	mov	r24, r10
 d68:	86 78       	andi	r24, 0x86	; 134
 d6a:	59 f0       	breq	.+22     	; 0xd82 <vfprintf+0x372>
 d6c:	a1 fe       	sbrs	r10, 1
 d6e:	02 c0       	rjmp	.+4      	; 0xd74 <vfprintf+0x364>
 d70:	8b e2       	ldi	r24, 0x2B	; 43
 d72:	01 c0       	rjmp	.+2      	; 0xd76 <vfprintf+0x366>
 d74:	80 e2       	ldi	r24, 0x20	; 32
 d76:	a7 fc       	sbrc	r10, 7
 d78:	8d e2       	ldi	r24, 0x2D	; 45
 d7a:	b6 01       	movw	r22, r12
 d7c:	90 e0       	ldi	r25, 0x00	; 0
 d7e:	0e 94 ff 06 	call	0xdfe	; 0xdfe <fputc>
 d82:	89 14       	cp	r8, r9
 d84:	38 f4       	brcc	.+14     	; 0xd94 <vfprintf+0x384>
 d86:	b6 01       	movw	r22, r12
 d88:	80 e3       	ldi	r24, 0x30	; 48
 d8a:	90 e0       	ldi	r25, 0x00	; 0
 d8c:	0e 94 ff 06 	call	0xdfe	; 0xdfe <fputc>
 d90:	9a 94       	dec	r9
 d92:	f7 cf       	rjmp	.-18     	; 0xd82 <vfprintf+0x372>
 d94:	8a 94       	dec	r8
 d96:	f3 01       	movw	r30, r6
 d98:	e8 0d       	add	r30, r8
 d9a:	f1 1d       	adc	r31, r1
 d9c:	80 81       	ld	r24, Z
 d9e:	b6 01       	movw	r22, r12
 da0:	90 e0       	ldi	r25, 0x00	; 0
 da2:	0e 94 ff 06 	call	0xdfe	; 0xdfe <fputc>
 da6:	81 10       	cpse	r8, r1
 da8:	f5 cf       	rjmp	.-22     	; 0xd94 <vfprintf+0x384>
 daa:	22 20       	and	r2, r2
 dac:	09 f4       	brne	.+2      	; 0xdb0 <vfprintf+0x3a0>
 dae:	42 ce       	rjmp	.-892    	; 0xa34 <vfprintf+0x24>
 db0:	b6 01       	movw	r22, r12
 db2:	80 e2       	ldi	r24, 0x20	; 32
 db4:	90 e0       	ldi	r25, 0x00	; 0
 db6:	0e 94 ff 06 	call	0xdfe	; 0xdfe <fputc>
 dba:	2a 94       	dec	r2
 dbc:	f6 cf       	rjmp	.-20     	; 0xdaa <vfprintf+0x39a>
 dbe:	f6 01       	movw	r30, r12
 dc0:	86 81       	ldd	r24, Z+6	; 0x06
 dc2:	97 81       	ldd	r25, Z+7	; 0x07
 dc4:	02 c0       	rjmp	.+4      	; 0xdca <vfprintf+0x3ba>
 dc6:	8f ef       	ldi	r24, 0xFF	; 255
 dc8:	9f ef       	ldi	r25, 0xFF	; 255
 dca:	2b 96       	adiw	r28, 0x0b	; 11
 dcc:	e2 e1       	ldi	r30, 0x12	; 18
 dce:	0c 94 b5 07 	jmp	0xf6a	; 0xf6a <__epilogue_restores__>

00000dd2 <strnlen_P>:
 dd2:	fc 01       	movw	r30, r24
 dd4:	05 90       	lpm	r0, Z+
 dd6:	61 50       	subi	r22, 0x01	; 1
 dd8:	70 40       	sbci	r23, 0x00	; 0
 dda:	01 10       	cpse	r0, r1
 ddc:	d8 f7       	brcc	.-10     	; 0xdd4 <strnlen_P+0x2>
 dde:	80 95       	com	r24
 de0:	90 95       	com	r25
 de2:	8e 0f       	add	r24, r30
 de4:	9f 1f       	adc	r25, r31
 de6:	08 95       	ret

00000de8 <strnlen>:
 de8:	fc 01       	movw	r30, r24
 dea:	61 50       	subi	r22, 0x01	; 1
 dec:	70 40       	sbci	r23, 0x00	; 0
 dee:	01 90       	ld	r0, Z+
 df0:	01 10       	cpse	r0, r1
 df2:	d8 f7       	brcc	.-10     	; 0xdea <strnlen+0x2>
 df4:	80 95       	com	r24
 df6:	90 95       	com	r25
 df8:	8e 0f       	add	r24, r30
 dfa:	9f 1f       	adc	r25, r31
 dfc:	08 95       	ret

00000dfe <fputc>:
 dfe:	0f 93       	push	r16
 e00:	1f 93       	push	r17
 e02:	cf 93       	push	r28
 e04:	df 93       	push	r29
 e06:	fb 01       	movw	r30, r22
 e08:	23 81       	ldd	r18, Z+3	; 0x03
 e0a:	21 fd       	sbrc	r18, 1
 e0c:	03 c0       	rjmp	.+6      	; 0xe14 <fputc+0x16>
 e0e:	8f ef       	ldi	r24, 0xFF	; 255
 e10:	9f ef       	ldi	r25, 0xFF	; 255
 e12:	2c c0       	rjmp	.+88     	; 0xe6c <fputc+0x6e>
 e14:	22 ff       	sbrs	r18, 2
 e16:	16 c0       	rjmp	.+44     	; 0xe44 <fputc+0x46>
 e18:	46 81       	ldd	r20, Z+6	; 0x06
 e1a:	57 81       	ldd	r21, Z+7	; 0x07
 e1c:	24 81       	ldd	r18, Z+4	; 0x04
 e1e:	35 81       	ldd	r19, Z+5	; 0x05
 e20:	42 17       	cp	r20, r18
 e22:	53 07       	cpc	r21, r19
 e24:	44 f4       	brge	.+16     	; 0xe36 <fputc+0x38>
 e26:	a0 81       	ld	r26, Z
 e28:	b1 81       	ldd	r27, Z+1	; 0x01
 e2a:	9d 01       	movw	r18, r26
 e2c:	2f 5f       	subi	r18, 0xFF	; 255
 e2e:	3f 4f       	sbci	r19, 0xFF	; 255
 e30:	31 83       	std	Z+1, r19	; 0x01
 e32:	20 83       	st	Z, r18
 e34:	8c 93       	st	X, r24
 e36:	26 81       	ldd	r18, Z+6	; 0x06
 e38:	37 81       	ldd	r19, Z+7	; 0x07
 e3a:	2f 5f       	subi	r18, 0xFF	; 255
 e3c:	3f 4f       	sbci	r19, 0xFF	; 255
 e3e:	37 83       	std	Z+7, r19	; 0x07
 e40:	26 83       	std	Z+6, r18	; 0x06
 e42:	14 c0       	rjmp	.+40     	; 0xe6c <fputc+0x6e>
 e44:	8b 01       	movw	r16, r22
 e46:	ec 01       	movw	r28, r24
 e48:	fb 01       	movw	r30, r22
 e4a:	00 84       	ldd	r0, Z+8	; 0x08
 e4c:	f1 85       	ldd	r31, Z+9	; 0x09
 e4e:	e0 2d       	mov	r30, r0
 e50:	09 95       	icall
 e52:	89 2b       	or	r24, r25
 e54:	e1 f6       	brne	.-72     	; 0xe0e <fputc+0x10>
 e56:	d8 01       	movw	r26, r16
 e58:	16 96       	adiw	r26, 0x06	; 6
 e5a:	8d 91       	ld	r24, X+
 e5c:	9c 91       	ld	r25, X
 e5e:	17 97       	sbiw	r26, 0x07	; 7
 e60:	01 96       	adiw	r24, 0x01	; 1
 e62:	17 96       	adiw	r26, 0x07	; 7
 e64:	9c 93       	st	X, r25
 e66:	8e 93       	st	-X, r24
 e68:	16 97       	sbiw	r26, 0x06	; 6
 e6a:	ce 01       	movw	r24, r28
 e6c:	df 91       	pop	r29
 e6e:	cf 91       	pop	r28
 e70:	1f 91       	pop	r17
 e72:	0f 91       	pop	r16
 e74:	08 95       	ret

00000e76 <__ultoa_invert>:
 e76:	fa 01       	movw	r30, r20
 e78:	aa 27       	eor	r26, r26
 e7a:	28 30       	cpi	r18, 0x08	; 8
 e7c:	51 f1       	breq	.+84     	; 0xed2 <__ultoa_invert+0x5c>
 e7e:	20 31       	cpi	r18, 0x10	; 16
 e80:	81 f1       	breq	.+96     	; 0xee2 <__ultoa_invert+0x6c>
 e82:	e8 94       	clt
 e84:	6f 93       	push	r22
 e86:	6e 7f       	andi	r22, 0xFE	; 254
 e88:	6e 5f       	subi	r22, 0xFE	; 254
 e8a:	7f 4f       	sbci	r23, 0xFF	; 255
 e8c:	8f 4f       	sbci	r24, 0xFF	; 255
 e8e:	9f 4f       	sbci	r25, 0xFF	; 255
 e90:	af 4f       	sbci	r26, 0xFF	; 255
 e92:	b1 e0       	ldi	r27, 0x01	; 1
 e94:	3e d0       	rcall	.+124    	; 0xf12 <__ultoa_invert+0x9c>
 e96:	b4 e0       	ldi	r27, 0x04	; 4
 e98:	3c d0       	rcall	.+120    	; 0xf12 <__ultoa_invert+0x9c>
 e9a:	67 0f       	add	r22, r23
 e9c:	78 1f       	adc	r23, r24
 e9e:	89 1f       	adc	r24, r25
 ea0:	9a 1f       	adc	r25, r26
 ea2:	a1 1d       	adc	r26, r1
 ea4:	68 0f       	add	r22, r24
 ea6:	79 1f       	adc	r23, r25
 ea8:	8a 1f       	adc	r24, r26
 eaa:	91 1d       	adc	r25, r1
 eac:	a1 1d       	adc	r26, r1
 eae:	6a 0f       	add	r22, r26
 eb0:	71 1d       	adc	r23, r1
 eb2:	81 1d       	adc	r24, r1
 eb4:	91 1d       	adc	r25, r1
 eb6:	a1 1d       	adc	r26, r1
 eb8:	20 d0       	rcall	.+64     	; 0xefa <__ultoa_invert+0x84>
 eba:	09 f4       	brne	.+2      	; 0xebe <__ultoa_invert+0x48>
 ebc:	68 94       	set
 ebe:	3f 91       	pop	r19
 ec0:	2a e0       	ldi	r18, 0x0A	; 10
 ec2:	26 9f       	mul	r18, r22
 ec4:	11 24       	eor	r1, r1
 ec6:	30 19       	sub	r19, r0
 ec8:	30 5d       	subi	r19, 0xD0	; 208
 eca:	31 93       	st	Z+, r19
 ecc:	de f6       	brtc	.-74     	; 0xe84 <__ultoa_invert+0xe>
 ece:	cf 01       	movw	r24, r30
 ed0:	08 95       	ret
 ed2:	46 2f       	mov	r20, r22
 ed4:	47 70       	andi	r20, 0x07	; 7
 ed6:	40 5d       	subi	r20, 0xD0	; 208
 ed8:	41 93       	st	Z+, r20
 eda:	b3 e0       	ldi	r27, 0x03	; 3
 edc:	0f d0       	rcall	.+30     	; 0xefc <__ultoa_invert+0x86>
 ede:	c9 f7       	brne	.-14     	; 0xed2 <__ultoa_invert+0x5c>
 ee0:	f6 cf       	rjmp	.-20     	; 0xece <__ultoa_invert+0x58>
 ee2:	46 2f       	mov	r20, r22
 ee4:	4f 70       	andi	r20, 0x0F	; 15
 ee6:	40 5d       	subi	r20, 0xD0	; 208
 ee8:	4a 33       	cpi	r20, 0x3A	; 58
 eea:	18 f0       	brcs	.+6      	; 0xef2 <__ultoa_invert+0x7c>
 eec:	49 5d       	subi	r20, 0xD9	; 217
 eee:	31 fd       	sbrc	r19, 1
 ef0:	40 52       	subi	r20, 0x20	; 32
 ef2:	41 93       	st	Z+, r20
 ef4:	02 d0       	rcall	.+4      	; 0xefa <__ultoa_invert+0x84>
 ef6:	a9 f7       	brne	.-22     	; 0xee2 <__ultoa_invert+0x6c>
 ef8:	ea cf       	rjmp	.-44     	; 0xece <__ultoa_invert+0x58>
 efa:	b4 e0       	ldi	r27, 0x04	; 4
 efc:	a6 95       	lsr	r26
 efe:	97 95       	ror	r25
 f00:	87 95       	ror	r24
 f02:	77 95       	ror	r23
 f04:	67 95       	ror	r22
 f06:	ba 95       	dec	r27
 f08:	c9 f7       	brne	.-14     	; 0xefc <__ultoa_invert+0x86>
 f0a:	00 97       	sbiw	r24, 0x00	; 0
 f0c:	61 05       	cpc	r22, r1
 f0e:	71 05       	cpc	r23, r1
 f10:	08 95       	ret
 f12:	9b 01       	movw	r18, r22
 f14:	ac 01       	movw	r20, r24
 f16:	0a 2e       	mov	r0, r26
 f18:	06 94       	lsr	r0
 f1a:	57 95       	ror	r21
 f1c:	47 95       	ror	r20
 f1e:	37 95       	ror	r19
 f20:	27 95       	ror	r18
 f22:	ba 95       	dec	r27
 f24:	c9 f7       	brne	.-14     	; 0xf18 <__ultoa_invert+0xa2>
 f26:	62 0f       	add	r22, r18
 f28:	73 1f       	adc	r23, r19
 f2a:	84 1f       	adc	r24, r20
 f2c:	95 1f       	adc	r25, r21
 f2e:	a0 1d       	adc	r26, r0
 f30:	08 95       	ret

00000f32 <__prologue_saves__>:
 f32:	2f 92       	push	r2
 f34:	3f 92       	push	r3
 f36:	4f 92       	push	r4
 f38:	5f 92       	push	r5
 f3a:	6f 92       	push	r6
 f3c:	7f 92       	push	r7
 f3e:	8f 92       	push	r8
 f40:	9f 92       	push	r9
 f42:	af 92       	push	r10
 f44:	bf 92       	push	r11
 f46:	cf 92       	push	r12
 f48:	df 92       	push	r13
 f4a:	ef 92       	push	r14
 f4c:	ff 92       	push	r15
 f4e:	0f 93       	push	r16
 f50:	1f 93       	push	r17
 f52:	cf 93       	push	r28
 f54:	df 93       	push	r29
 f56:	cd b7       	in	r28, 0x3d	; 61
 f58:	de b7       	in	r29, 0x3e	; 62
 f5a:	ca 1b       	sub	r28, r26
 f5c:	db 0b       	sbc	r29, r27
 f5e:	0f b6       	in	r0, 0x3f	; 63
 f60:	f8 94       	cli
 f62:	de bf       	out	0x3e, r29	; 62
 f64:	0f be       	out	0x3f, r0	; 63
 f66:	cd bf       	out	0x3d, r28	; 61
 f68:	09 94       	ijmp

00000f6a <__epilogue_restores__>:
 f6a:	2a 88       	ldd	r2, Y+18	; 0x12
 f6c:	39 88       	ldd	r3, Y+17	; 0x11
 f6e:	48 88       	ldd	r4, Y+16	; 0x10
 f70:	5f 84       	ldd	r5, Y+15	; 0x0f
 f72:	6e 84       	ldd	r6, Y+14	; 0x0e
 f74:	7d 84       	ldd	r7, Y+13	; 0x0d
 f76:	8c 84       	ldd	r8, Y+12	; 0x0c
 f78:	9b 84       	ldd	r9, Y+11	; 0x0b
 f7a:	aa 84       	ldd	r10, Y+10	; 0x0a
 f7c:	b9 84       	ldd	r11, Y+9	; 0x09
 f7e:	c8 84       	ldd	r12, Y+8	; 0x08
 f80:	df 80       	ldd	r13, Y+7	; 0x07
 f82:	ee 80       	ldd	r14, Y+6	; 0x06
 f84:	fd 80       	ldd	r15, Y+5	; 0x05
 f86:	0c 81       	ldd	r16, Y+4	; 0x04
 f88:	1b 81       	ldd	r17, Y+3	; 0x03
 f8a:	aa 81       	ldd	r26, Y+2	; 0x02
 f8c:	b9 81       	ldd	r27, Y+1	; 0x01
 f8e:	ce 0f       	add	r28, r30
 f90:	d1 1d       	adc	r29, r1
 f92:	0f b6       	in	r0, 0x3f	; 63
 f94:	f8 94       	cli
 f96:	de bf       	out	0x3e, r29	; 62
 f98:	0f be       	out	0x3f, r0	; 63
 f9a:	cd bf       	out	0x3d, r28	; 61
 f9c:	ed 01       	movw	r28, r26
 f9e:	08 95       	ret

00000fa0 <_exit>:
 fa0:	f8 94       	cli

00000fa2 <__stop_program>:
 fa2:	ff cf       	rjmp	.-2      	; 0xfa2 <__stop_program>
