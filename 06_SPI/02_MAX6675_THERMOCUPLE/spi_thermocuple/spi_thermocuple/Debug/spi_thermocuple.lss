
spi_thermocuple.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800100  0000093a  000009ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000093a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800132  00800132  00000a00  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a00  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a5c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000a9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000019af  00000000  00000000  00000b5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000096e  00000000  00000000  0000250b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a44  00000000  00000000  00002e79  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  000038c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000053c  00000000  00000000  00003a60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ce4  00000000  00000000  00003f9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00004c80  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e3       	ldi	r30, 0x3A	; 58
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 33       	cpi	r26, 0x32	; 50
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e3       	ldi	r26, 0x32	; 50
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 33       	cpi	r26, 0x36	; 54
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 9d 01 	call	0x33a	; 0x33a <main>
  9e:	0c 94 9b 04 	jmp	0x936	; 0x936 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <LCD_AVR_Data_Bus>:
	_delay_ms(2);
	E_OFF;
}
void LCD_AVR_Data_Bus(uint8_t a){
	// 0001
	if (a & 0x01){D4_ON;}
  a6:	80 ff       	sbrs	r24, 0
  a8:	04 c0       	rjmp	.+8      	; 0xb2 <LCD_AVR_Data_Bus+0xc>
  aa:	98 b1       	in	r25, 0x08	; 8
  ac:	94 60       	ori	r25, 0x04	; 4
  ae:	98 b9       	out	0x08, r25	; 8
  b0:	03 c0       	rjmp	.+6      	; 0xb8 <LCD_AVR_Data_Bus+0x12>
	else{D4_OFF;}
  b2:	98 b1       	in	r25, 0x08	; 8
  b4:	9b 7f       	andi	r25, 0xFB	; 251
  b6:	98 b9       	out	0x08, r25	; 8
	// 0010
	if (a & 0x02){D5_ON;}
  b8:	81 ff       	sbrs	r24, 1
  ba:	04 c0       	rjmp	.+8      	; 0xc4 <LCD_AVR_Data_Bus+0x1e>
  bc:	98 b1       	in	r25, 0x08	; 8
  be:	98 60       	ori	r25, 0x08	; 8
  c0:	98 b9       	out	0x08, r25	; 8
  c2:	03 c0       	rjmp	.+6      	; 0xca <LCD_AVR_Data_Bus+0x24>
	else{D5_OFF;}
  c4:	98 b1       	in	r25, 0x08	; 8
  c6:	97 7f       	andi	r25, 0xF7	; 247
  c8:	98 b9       	out	0x08, r25	; 8
	// 0100
	if (a & 0x04){D6_ON;}
  ca:	82 ff       	sbrs	r24, 2
  cc:	04 c0       	rjmp	.+8      	; 0xd6 <LCD_AVR_Data_Bus+0x30>
  ce:	98 b1       	in	r25, 0x08	; 8
  d0:	90 61       	ori	r25, 0x10	; 16
  d2:	98 b9       	out	0x08, r25	; 8
  d4:	03 c0       	rjmp	.+6      	; 0xdc <LCD_AVR_Data_Bus+0x36>
	else{D6_OFF;}
  d6:	98 b1       	in	r25, 0x08	; 8
  d8:	9f 7e       	andi	r25, 0xEF	; 239
  da:	98 b9       	out	0x08, r25	; 8
	// 1000
	if (a & 0x08){D7_ON;}
  dc:	83 ff       	sbrs	r24, 3
  de:	04 c0       	rjmp	.+8      	; 0xe8 <LCD_AVR_Data_Bus+0x42>
  e0:	88 b1       	in	r24, 0x08	; 8
  e2:	80 62       	ori	r24, 0x20	; 32
  e4:	88 b9       	out	0x08, r24	; 8
  e6:	08 95       	ret
	else{D7_OFF;}
  e8:	88 b1       	in	r24, 0x08	; 8
  ea:	8f 7d       	andi	r24, 0xDF	; 223
  ec:	88 b9       	out	0x08, r24	; 8
  ee:	08 95       	ret

000000f0 <LCD_AVR_Cmd>:
#include "LCD_Libreria.h"
#define  F_CPU 8000000UL
#include <util/delay.h>

void LCD_AVR_Cmd(uint8_t a){
	E_OFF;
  f0:	98 b1       	in	r25, 0x08	; 8
  f2:	9e 7f       	andi	r25, 0xFE	; 254
  f4:	98 b9       	out	0x08, r25	; 8
	E_ON;
  f6:	98 b1       	in	r25, 0x08	; 8
  f8:	91 60       	ori	r25, 0x01	; 1
  fa:	98 b9       	out	0x08, r25	; 8
	LCD_AVR_Data_Bus(a)	;
  fc:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_AVR_Data_Bus>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 100:	8f e9       	ldi	r24, 0x9F	; 159
 102:	9f e0       	ldi	r25, 0x0F	; 15
 104:	01 97       	sbiw	r24, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <LCD_AVR_Cmd+0x14>
 108:	00 c0       	rjmp	.+0      	; 0x10a <LCD_AVR_Cmd+0x1a>
 10a:	00 00       	nop
	_delay_ms(2);
	E_OFF;
 10c:	88 b1       	in	r24, 0x08	; 8
 10e:	8e 7f       	andi	r24, 0xFE	; 254
 110:	88 b9       	out	0x08, r24	; 8
 112:	08 95       	ret

00000114 <LCD_AVR_Init>:
	if (a & 0x08){D7_ON;}
	else{D7_OFF;}
}
void LCD_AVR_Init(void){
	
	DDRC |= (1<<0) |(1<<1)|(1<<2)|(1<<3)|(1<<4)|(1<<5);
 114:	87 b1       	in	r24, 0x07	; 7
 116:	8f 63       	ori	r24, 0x3F	; 63
 118:	87 b9       	out	0x07, r24	; 7
	
	LCD_AVR_Cmd(0X03);
 11a:	83 e0       	ldi	r24, 0x03	; 3
 11c:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X03);
 120:	83 e0       	ldi	r24, 0x03	; 3
 122:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X03);
 126:	83 e0       	ldi	r24, 0x03	; 3
 128:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X02);
 12c:	82 e0       	ldi	r24, 0x02	; 2
 12e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X02);
 132:	82 e0       	ldi	r24, 0x02	; 2
 134:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X08);
 138:	88 e0       	ldi	r24, 0x08	; 8
 13a:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X00);
 13e:	80 e0       	ldi	r24, 0x00	; 0
 140:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X08);
 144:	88 e0       	ldi	r24, 0x08	; 8
 146:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X00);
 14a:	80 e0       	ldi	r24, 0x00	; 0
 14c:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X01);
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X00);
 156:	80 e0       	ldi	r24, 0x00	; 0
 158:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(0X0C);
 15c:	8c e0       	ldi	r24, 0x0C	; 12
 15e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
 162:	08 95       	ret

00000164 <LCD_AVR_Set_Cursor>:
	
}
void LCD_AVR_Set_Cursor(uint8_t x,Ubicacion y){
 164:	cf 93       	push	r28
	uint8_t m,n;

	RS_OFF;
 166:	98 b1       	in	r25, 0x08	; 8
 168:	9d 7f       	andi	r25, 0xFD	; 253
 16a:	98 b9       	out	0x08, r25	; 8
	switch (y)
 16c:	61 30       	cpi	r22, 0x01	; 1
 16e:	c9 f0       	breq	.+50     	; 0x1a2 <LCD_AVR_Set_Cursor+0x3e>
 170:	28 f0       	brcs	.+10     	; 0x17c <LCD_AVR_Set_Cursor+0x18>
 172:	62 30       	cpi	r22, 0x02	; 2
 174:	49 f1       	breq	.+82     	; 0x1c8 <LCD_AVR_Set_Cursor+0x64>
 176:	63 30       	cpi	r22, 0x03	; 3
 178:	d1 f1       	breq	.+116    	; 0x1ee <LCD_AVR_Set_Cursor+0x8a>
 17a:	4b c0       	rjmp	.+150    	; 0x212 <LCD_AVR_Set_Cursor+0xae>
	{
		case Fila1:
		m=0x80+x;
 17c:	c0 e8       	ldi	r28, 0x80	; 128
 17e:	c8 0f       	add	r28, r24
		n=(0x80+x)>>4;
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	80 58       	subi	r24, 0x80	; 128
 184:	9f 4f       	sbci	r25, 0xFF	; 255
 186:	95 95       	asr	r25
 188:	87 95       	ror	r24
 18a:	95 95       	asr	r25
 18c:	87 95       	ror	r24
 18e:	95 95       	asr	r25
 190:	87 95       	ror	r24
 192:	95 95       	asr	r25
 194:	87 95       	ror	r24
		LCD_AVR_Cmd(n);
 196:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
		LCD_AVR_Cmd(m);
 19a:	8c 2f       	mov	r24, r28
 19c:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
		break;
 1a0:	38 c0       	rjmp	.+112    	; 0x212 <LCD_AVR_Set_Cursor+0xae>
		case Fila2:
		m=0xC0+x;
 1a2:	c0 ec       	ldi	r28, 0xC0	; 192
 1a4:	c8 0f       	add	r28, r24
		n=(0XC0+x)>>4;
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	80 54       	subi	r24, 0x40	; 64
 1aa:	9f 4f       	sbci	r25, 0xFF	; 255
 1ac:	95 95       	asr	r25
 1ae:	87 95       	ror	r24
 1b0:	95 95       	asr	r25
 1b2:	87 95       	ror	r24
 1b4:	95 95       	asr	r25
 1b6:	87 95       	ror	r24
 1b8:	95 95       	asr	r25
 1ba:	87 95       	ror	r24
		LCD_AVR_Cmd(n);
 1bc:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
		LCD_AVR_Cmd(m);
 1c0:	8c 2f       	mov	r24, r28
 1c2:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
		break;
 1c6:	25 c0       	rjmp	.+74     	; 0x212 <LCD_AVR_Set_Cursor+0xae>
		case Fila3:
		m=0x94+x;
 1c8:	c4 e9       	ldi	r28, 0x94	; 148
 1ca:	c8 0f       	add	r28, r24
		n=(0x94+x)>>4;
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	8c 56       	subi	r24, 0x6C	; 108
 1d0:	9f 4f       	sbci	r25, 0xFF	; 255
 1d2:	95 95       	asr	r25
 1d4:	87 95       	ror	r24
 1d6:	95 95       	asr	r25
 1d8:	87 95       	ror	r24
 1da:	95 95       	asr	r25
 1dc:	87 95       	ror	r24
 1de:	95 95       	asr	r25
 1e0:	87 95       	ror	r24
		LCD_AVR_Cmd(n);
 1e2:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
		LCD_AVR_Cmd(m);
 1e6:	8c 2f       	mov	r24, r28
 1e8:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
		break;
 1ec:	12 c0       	rjmp	.+36     	; 0x212 <LCD_AVR_Set_Cursor+0xae>
		case Fila4:
		m=0xD4+x;
 1ee:	c4 ed       	ldi	r28, 0xD4	; 212
 1f0:	c8 0f       	add	r28, r24
		n=(0xD4+x)>>4;
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	8c 52       	subi	r24, 0x2C	; 44
 1f6:	9f 4f       	sbci	r25, 0xFF	; 255
 1f8:	95 95       	asr	r25
 1fa:	87 95       	ror	r24
 1fc:	95 95       	asr	r25
 1fe:	87 95       	ror	r24
 200:	95 95       	asr	r25
 202:	87 95       	ror	r24
 204:	95 95       	asr	r25
 206:	87 95       	ror	r24
		LCD_AVR_Cmd(n);
 208:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
		LCD_AVR_Cmd(m);
 20c:	8c 2f       	mov	r24, r28
 20e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
		break;
	}
	
}
 212:	cf 91       	pop	r28
 214:	08 95       	ret

00000216 <LCD_AVR_Print_Char>:
void LCD_AVR_Print_Char(char c){
 216:	cf 93       	push	r28
 218:	c8 2f       	mov	r28, r24
	uint8_t m,n;
	m=c>>4;
	n=c;
	RS_ON;
 21a:	88 b1       	in	r24, 0x08	; 8
 21c:	82 60       	ori	r24, 0x02	; 2
 21e:	88 b9       	out	0x08, r24	; 8
	LCD_AVR_Cmd(m);
 220:	8c 2f       	mov	r24, r28
 222:	82 95       	swap	r24
 224:	8f 70       	andi	r24, 0x0F	; 15
 226:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
	LCD_AVR_Cmd(n);
 22a:	8c 2f       	mov	r24, r28
 22c:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_AVR_Cmd>
}
 230:	cf 91       	pop	r28
 232:	08 95       	ret

00000234 <LCD_AVR_Print_String>:
void LCD_AVR_Print_String(char *c){
 234:	cf 93       	push	r28
 236:	df 93       	push	r29
 238:	ec 01       	movw	r28, r24
	
	char *ptr;
	ptr = c;
	while(*ptr)
 23a:	03 c0       	rjmp	.+6      	; 0x242 <LCD_AVR_Print_String+0xe>
	LCD_AVR_Print_Char(*ptr++);
 23c:	21 96       	adiw	r28, 0x01	; 1
 23e:	0e 94 0b 01 	call	0x216	; 0x216 <LCD_AVR_Print_Char>
}
void LCD_AVR_Print_String(char *c){
	
	char *ptr;
	ptr = c;
	while(*ptr)
 242:	88 81       	ld	r24, Y
 244:	81 11       	cpse	r24, r1
 246:	fa cf       	rjmp	.-12     	; 0x23c <LCD_AVR_Print_String+0x8>
	LCD_AVR_Print_Char(*ptr++);
	
}
 248:	df 91       	pop	r29
 24a:	cf 91       	pop	r28
 24c:	08 95       	ret

0000024e <spi_init>:
	SPDR = data;
	/* wait for end of transmission */
	while(!(SPSR & (1<<SPIF)))
	;
	return SPDR;
}
 24e:	9c b5       	in	r25, 0x2c	; 44
 250:	9f 7d       	andi	r25, 0xDF	; 223
 252:	9c bd       	out	0x2c, r25	; 44
 254:	81 11       	cpse	r24, r1
 256:	06 c0       	rjmp	.+12     	; 0x264 <spi_init+0x16>
 258:	84 b1       	in	r24, 0x04	; 4
 25a:	80 61       	ori	r24, 0x10	; 16
 25c:	84 b9       	out	0x04, r24	; 4
 25e:	80 e4       	ldi	r24, 0x40	; 64
 260:	8c bd       	out	0x2c, r24	; 44
 262:	08 95       	ret
 264:	84 b1       	in	r24, 0x04	; 4
 266:	88 62       	ori	r24, 0x28	; 40
 268:	84 b9       	out	0x04, r24	; 4
 26a:	84 b1       	in	r24, 0x04	; 4
 26c:	84 60       	ori	r24, 0x04	; 4
 26e:	84 b9       	out	0x04, r24	; 4
 270:	8c b5       	in	r24, 0x2c	; 44
 272:	80 65       	ori	r24, 0x50	; 80
 274:	8c bd       	out	0x2c, r24	; 44
 276:	8c b5       	in	r24, 0x2c	; 44
 278:	8c bd       	out	0x2c, r24	; 44
 27a:	8d b5       	in	r24, 0x2d	; 45
 27c:	8d bd       	out	0x2d, r24	; 45
 27e:	08 95       	ret

00000280 <spi_read>:

unsigned char spi_read(void)
{
	/* Send data */
	SPDR = DATA_DUMMY;
 280:	1e bc       	out	0x2e, r1	; 46
	/* Wait for reception complete */
	while(!(SPSR & (1<<SPIF)));
 282:	0d b4       	in	r0, 0x2d	; 45
 284:	07 fe       	sbrs	r0, 7
 286:	fd cf       	rjmp	.-6      	; 0x282 <spi_read+0x2>
	/* Return Data Register */
	return SPDR;
 288:	8e b5       	in	r24, 0x2e	; 46
}
 28a:	08 95       	ret

0000028c <read_MAX6675>:
		
    }
}

void read_MAX6675(void){
	SS_ON;
 28c:	85 b1       	in	r24, 0x05	; 5
 28e:	8b 7f       	andi	r24, 0xFB	; 251
 290:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 292:	2a e6       	ldi	r18, 0x6A	; 106
 294:	2a 95       	dec	r18
 296:	f1 f7       	brne	.-4      	; 0x294 <read_MAX6675+0x8>
 298:	00 c0       	rjmp	.+0      	; 0x29a <read_MAX6675+0xe>
	_delay_us(20);
	dato_high=spi_read();
 29a:	0e 94 40 01 	call	0x280	; 0x280 <spi_read>
 29e:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__data_end>
 2a2:	8a e6       	ldi	r24, 0x6A	; 106
 2a4:	8a 95       	dec	r24
 2a6:	f1 f7       	brne	.-4      	; 0x2a4 <read_MAX6675+0x18>
 2a8:	00 c0       	rjmp	.+0      	; 0x2aa <read_MAX6675+0x1e>
	_delay_us(20);
	dato_low=spi_read();
 2aa:	0e 94 40 01 	call	0x280	; 0x280 <spi_read>
 2ae:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <dato_low>
	SS_OFF;
 2b2:	85 b1       	in	r24, 0x05	; 5
 2b4:	84 60       	ori	r24, 0x04	; 4
 2b6:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2b8:	8f e3       	ldi	r24, 0x3F	; 63
 2ba:	9c e9       	ldi	r25, 0x9C	; 156
 2bc:	01 97       	sbiw	r24, 0x01	; 1
 2be:	f1 f7       	brne	.-4      	; 0x2bc <read_MAX6675+0x30>
 2c0:	00 c0       	rjmp	.+0      	; 0x2c2 <read_MAX6675+0x36>
 2c2:	00 00       	nop
	
	_delay_ms(10);
	dato=(uint16_t)((((dato_low & 0x08)<<8)|dato_high)>>3);
 2c4:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <dato_low>
 2c8:	88 70       	andi	r24, 0x08	; 8
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	98 2f       	mov	r25, r24
 2ce:	88 27       	eor	r24, r24
 2d0:	20 91 32 01 	lds	r18, 0x0132	; 0x800132 <__data_end>
 2d4:	82 2b       	or	r24, r18
 2d6:	95 95       	asr	r25
 2d8:	87 95       	ror	r24
 2da:	95 95       	asr	r25
 2dc:	87 95       	ror	r24
 2de:	95 95       	asr	r25
 2e0:	87 95       	ror	r24
 2e2:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <dato>
 2e6:	90 93 34 01 	sts	0x0134, r25	; 0x800134 <dato+0x1>
	sprintf(buffer,"%5X",dato);
 2ea:	9f 93       	push	r25
 2ec:	8f 93       	push	r24
 2ee:	84 e1       	ldi	r24, 0x14	; 20
 2f0:	91 e0       	ldi	r25, 0x01	; 1
 2f2:	9f 93       	push	r25
 2f4:	8f 93       	push	r24
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	91 e0       	ldi	r25, 0x01	; 1
 2fa:	9f 93       	push	r25
 2fc:	8f 93       	push	r24
 2fe:	0e 94 b1 01 	call	0x362	; 0x362 <sprintf>
	
	LCD_AVR_Set_Cursor(4,Fila2);
 302:	61 e0       	ldi	r22, 0x01	; 1
 304:	84 e0       	ldi	r24, 0x04	; 4
 306:	0e 94 b2 00 	call	0x164	; 0x164 <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String("Temp: ");
 30a:	88 e1       	ldi	r24, 0x18	; 24
 30c:	91 e0       	ldi	r25, 0x01	; 1
 30e:	0e 94 1a 01 	call	0x234	; 0x234 <LCD_AVR_Print_String>
	LCD_AVR_Print_String(buffer);
 312:	80 e0       	ldi	r24, 0x00	; 0
 314:	91 e0       	ldi	r25, 0x01	; 1
 316:	0e 94 1a 01 	call	0x234	; 0x234 <LCD_AVR_Print_String>
 31a:	9f ef       	ldi	r25, 0xFF	; 255
 31c:	20 e7       	ldi	r18, 0x70	; 112
 31e:	82 e0       	ldi	r24, 0x02	; 2
 320:	91 50       	subi	r25, 0x01	; 1
 322:	20 40       	sbci	r18, 0x00	; 0
 324:	80 40       	sbci	r24, 0x00	; 0
 326:	e1 f7       	brne	.-8      	; 0x320 <read_MAX6675+0x94>
 328:	00 c0       	rjmp	.+0      	; 0x32a <read_MAX6675+0x9e>
 32a:	00 00       	nop
	_delay_ms(50);
}
 32c:	0f 90       	pop	r0
 32e:	0f 90       	pop	r0
 330:	0f 90       	pop	r0
 332:	0f 90       	pop	r0
 334:	0f 90       	pop	r0
 336:	0f 90       	pop	r0
 338:	08 95       	ret

0000033a <main>:
void read_MAX6675(void);

int main(void)
{
    /* Replace with your application code */
	LCD_AVR_Init();
 33a:	0e 94 8a 00 	call	0x114	; 0x114 <LCD_AVR_Init>
	spi_init(MASTER);
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	0e 94 27 01 	call	0x24e	; 0x24e <spi_init>
	LCD_AVR_Set_Cursor(2,Fila1);
 344:	60 e0       	ldi	r22, 0x00	; 0
 346:	82 e0       	ldi	r24, 0x02	; 2
 348:	0e 94 b2 00 	call	0x164	; 0x164 <LCD_AVR_Set_Cursor>
	LCD_AVR_Print_String("THERMOCUPLE - SPI");
 34c:	8f e1       	ldi	r24, 0x1F	; 31
 34e:	91 e0       	ldi	r25, 0x01	; 1
 350:	0e 94 1a 01 	call	0x234	; 0x234 <LCD_AVR_Print_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 354:	8a e6       	ldi	r24, 0x6A	; 106
 356:	8a 95       	dec	r24
 358:	f1 f7       	brne	.-4      	; 0x356 <main+0x1c>
 35a:	00 c0       	rjmp	.+0      	; 0x35c <main+0x22>
	_delay_us(20);
    while (1) 
    {
		read_MAX6675();
 35c:	0e 94 46 01 	call	0x28c	; 0x28c <read_MAX6675>
 360:	fd cf       	rjmp	.-6      	; 0x35c <main+0x22>

00000362 <sprintf>:
 362:	ae e0       	ldi	r26, 0x0E	; 14
 364:	b0 e0       	ldi	r27, 0x00	; 0
 366:	e7 eb       	ldi	r30, 0xB7	; 183
 368:	f1 e0       	ldi	r31, 0x01	; 1
 36a:	0c 94 72 04 	jmp	0x8e4	; 0x8e4 <__prologue_saves__+0x1c>
 36e:	0d 89       	ldd	r16, Y+21	; 0x15
 370:	1e 89       	ldd	r17, Y+22	; 0x16
 372:	86 e0       	ldi	r24, 0x06	; 6
 374:	8c 83       	std	Y+4, r24	; 0x04
 376:	1a 83       	std	Y+2, r17	; 0x02
 378:	09 83       	std	Y+1, r16	; 0x01
 37a:	8f ef       	ldi	r24, 0xFF	; 255
 37c:	9f e7       	ldi	r25, 0x7F	; 127
 37e:	9e 83       	std	Y+6, r25	; 0x06
 380:	8d 83       	std	Y+5, r24	; 0x05
 382:	ae 01       	movw	r20, r28
 384:	47 5e       	subi	r20, 0xE7	; 231
 386:	5f 4f       	sbci	r21, 0xFF	; 255
 388:	6f 89       	ldd	r22, Y+23	; 0x17
 38a:	78 8d       	ldd	r23, Y+24	; 0x18
 38c:	ce 01       	movw	r24, r28
 38e:	01 96       	adiw	r24, 0x01	; 1
 390:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <vfprintf>
 394:	ef 81       	ldd	r30, Y+7	; 0x07
 396:	f8 85       	ldd	r31, Y+8	; 0x08
 398:	e0 0f       	add	r30, r16
 39a:	f1 1f       	adc	r31, r17
 39c:	10 82       	st	Z, r1
 39e:	2e 96       	adiw	r28, 0x0e	; 14
 3a0:	e4 e0       	ldi	r30, 0x04	; 4
 3a2:	0c 94 8e 04 	jmp	0x91c	; 0x91c <__epilogue_restores__+0x1c>

000003a6 <vfprintf>:
 3a6:	ab e0       	ldi	r26, 0x0B	; 11
 3a8:	b0 e0       	ldi	r27, 0x00	; 0
 3aa:	e9 ed       	ldi	r30, 0xD9	; 217
 3ac:	f1 e0       	ldi	r31, 0x01	; 1
 3ae:	0c 94 64 04 	jmp	0x8c8	; 0x8c8 <__prologue_saves__>
 3b2:	6c 01       	movw	r12, r24
 3b4:	7b 01       	movw	r14, r22
 3b6:	8a 01       	movw	r16, r20
 3b8:	fc 01       	movw	r30, r24
 3ba:	17 82       	std	Z+7, r1	; 0x07
 3bc:	16 82       	std	Z+6, r1	; 0x06
 3be:	83 81       	ldd	r24, Z+3	; 0x03
 3c0:	81 ff       	sbrs	r24, 1
 3c2:	cc c1       	rjmp	.+920    	; 0x75c <__EEPROM_REGION_LENGTH__+0x35c>
 3c4:	ce 01       	movw	r24, r28
 3c6:	01 96       	adiw	r24, 0x01	; 1
 3c8:	3c 01       	movw	r6, r24
 3ca:	f6 01       	movw	r30, r12
 3cc:	93 81       	ldd	r25, Z+3	; 0x03
 3ce:	f7 01       	movw	r30, r14
 3d0:	93 fd       	sbrc	r25, 3
 3d2:	85 91       	lpm	r24, Z+
 3d4:	93 ff       	sbrs	r25, 3
 3d6:	81 91       	ld	r24, Z+
 3d8:	7f 01       	movw	r14, r30
 3da:	88 23       	and	r24, r24
 3dc:	09 f4       	brne	.+2      	; 0x3e0 <vfprintf+0x3a>
 3de:	ba c1       	rjmp	.+884    	; 0x754 <__EEPROM_REGION_LENGTH__+0x354>
 3e0:	85 32       	cpi	r24, 0x25	; 37
 3e2:	39 f4       	brne	.+14     	; 0x3f2 <vfprintf+0x4c>
 3e4:	93 fd       	sbrc	r25, 3
 3e6:	85 91       	lpm	r24, Z+
 3e8:	93 ff       	sbrs	r25, 3
 3ea:	81 91       	ld	r24, Z+
 3ec:	7f 01       	movw	r14, r30
 3ee:	85 32       	cpi	r24, 0x25	; 37
 3f0:	29 f4       	brne	.+10     	; 0x3fc <vfprintf+0x56>
 3f2:	b6 01       	movw	r22, r12
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	0e 94 ca 03 	call	0x794	; 0x794 <fputc>
 3fa:	e7 cf       	rjmp	.-50     	; 0x3ca <vfprintf+0x24>
 3fc:	91 2c       	mov	r9, r1
 3fe:	21 2c       	mov	r2, r1
 400:	31 2c       	mov	r3, r1
 402:	ff e1       	ldi	r31, 0x1F	; 31
 404:	f3 15       	cp	r31, r3
 406:	d8 f0       	brcs	.+54     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 408:	8b 32       	cpi	r24, 0x2B	; 43
 40a:	79 f0       	breq	.+30     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 40c:	38 f4       	brcc	.+14     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 40e:	80 32       	cpi	r24, 0x20	; 32
 410:	79 f0       	breq	.+30     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 412:	83 32       	cpi	r24, 0x23	; 35
 414:	a1 f4       	brne	.+40     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 416:	23 2d       	mov	r18, r3
 418:	20 61       	ori	r18, 0x10	; 16
 41a:	1d c0       	rjmp	.+58     	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 41c:	8d 32       	cpi	r24, 0x2D	; 45
 41e:	61 f0       	breq	.+24     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 420:	80 33       	cpi	r24, 0x30	; 48
 422:	69 f4       	brne	.+26     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 424:	23 2d       	mov	r18, r3
 426:	21 60       	ori	r18, 0x01	; 1
 428:	16 c0       	rjmp	.+44     	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 42a:	83 2d       	mov	r24, r3
 42c:	82 60       	ori	r24, 0x02	; 2
 42e:	38 2e       	mov	r3, r24
 430:	e3 2d       	mov	r30, r3
 432:	e4 60       	ori	r30, 0x04	; 4
 434:	3e 2e       	mov	r3, r30
 436:	2a c0       	rjmp	.+84     	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 438:	f3 2d       	mov	r31, r3
 43a:	f8 60       	ori	r31, 0x08	; 8
 43c:	1d c0       	rjmp	.+58     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 43e:	37 fc       	sbrc	r3, 7
 440:	2d c0       	rjmp	.+90     	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
 442:	20 ed       	ldi	r18, 0xD0	; 208
 444:	28 0f       	add	r18, r24
 446:	2a 30       	cpi	r18, 0x0A	; 10
 448:	40 f0       	brcs	.+16     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 44a:	8e 32       	cpi	r24, 0x2E	; 46
 44c:	b9 f4       	brne	.+46     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 44e:	36 fc       	sbrc	r3, 6
 450:	81 c1       	rjmp	.+770    	; 0x754 <__EEPROM_REGION_LENGTH__+0x354>
 452:	23 2d       	mov	r18, r3
 454:	20 64       	ori	r18, 0x40	; 64
 456:	32 2e       	mov	r3, r18
 458:	19 c0       	rjmp	.+50     	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 45a:	36 fe       	sbrs	r3, 6
 45c:	06 c0       	rjmp	.+12     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 45e:	8a e0       	ldi	r24, 0x0A	; 10
 460:	98 9e       	mul	r9, r24
 462:	20 0d       	add	r18, r0
 464:	11 24       	eor	r1, r1
 466:	92 2e       	mov	r9, r18
 468:	11 c0       	rjmp	.+34     	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 46a:	ea e0       	ldi	r30, 0x0A	; 10
 46c:	2e 9e       	mul	r2, r30
 46e:	20 0d       	add	r18, r0
 470:	11 24       	eor	r1, r1
 472:	22 2e       	mov	r2, r18
 474:	f3 2d       	mov	r31, r3
 476:	f0 62       	ori	r31, 0x20	; 32
 478:	3f 2e       	mov	r3, r31
 47a:	08 c0       	rjmp	.+16     	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 47c:	8c 36       	cpi	r24, 0x6C	; 108
 47e:	21 f4       	brne	.+8      	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 480:	83 2d       	mov	r24, r3
 482:	80 68       	ori	r24, 0x80	; 128
 484:	38 2e       	mov	r3, r24
 486:	02 c0       	rjmp	.+4      	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 488:	88 36       	cpi	r24, 0x68	; 104
 48a:	41 f4       	brne	.+16     	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
 48c:	f7 01       	movw	r30, r14
 48e:	93 fd       	sbrc	r25, 3
 490:	85 91       	lpm	r24, Z+
 492:	93 ff       	sbrs	r25, 3
 494:	81 91       	ld	r24, Z+
 496:	7f 01       	movw	r14, r30
 498:	81 11       	cpse	r24, r1
 49a:	b3 cf       	rjmp	.-154    	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 49c:	98 2f       	mov	r25, r24
 49e:	9f 7d       	andi	r25, 0xDF	; 223
 4a0:	95 54       	subi	r25, 0x45	; 69
 4a2:	93 30       	cpi	r25, 0x03	; 3
 4a4:	28 f4       	brcc	.+10     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 4a6:	0c 5f       	subi	r16, 0xFC	; 252
 4a8:	1f 4f       	sbci	r17, 0xFF	; 255
 4aa:	9f e3       	ldi	r25, 0x3F	; 63
 4ac:	99 83       	std	Y+1, r25	; 0x01
 4ae:	0d c0       	rjmp	.+26     	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
 4b0:	83 36       	cpi	r24, 0x63	; 99
 4b2:	31 f0       	breq	.+12     	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 4b4:	83 37       	cpi	r24, 0x73	; 115
 4b6:	71 f0       	breq	.+28     	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
 4b8:	83 35       	cpi	r24, 0x53	; 83
 4ba:	09 f0       	breq	.+2      	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4bc:	59 c0       	rjmp	.+178    	; 0x570 <__EEPROM_REGION_LENGTH__+0x170>
 4be:	21 c0       	rjmp	.+66     	; 0x502 <__EEPROM_REGION_LENGTH__+0x102>
 4c0:	f8 01       	movw	r30, r16
 4c2:	80 81       	ld	r24, Z
 4c4:	89 83       	std	Y+1, r24	; 0x01
 4c6:	0e 5f       	subi	r16, 0xFE	; 254
 4c8:	1f 4f       	sbci	r17, 0xFF	; 255
 4ca:	88 24       	eor	r8, r8
 4cc:	83 94       	inc	r8
 4ce:	91 2c       	mov	r9, r1
 4d0:	53 01       	movw	r10, r6
 4d2:	13 c0       	rjmp	.+38     	; 0x4fa <__EEPROM_REGION_LENGTH__+0xfa>
 4d4:	28 01       	movw	r4, r16
 4d6:	f2 e0       	ldi	r31, 0x02	; 2
 4d8:	4f 0e       	add	r4, r31
 4da:	51 1c       	adc	r5, r1
 4dc:	f8 01       	movw	r30, r16
 4de:	a0 80       	ld	r10, Z
 4e0:	b1 80       	ldd	r11, Z+1	; 0x01
 4e2:	36 fe       	sbrs	r3, 6
 4e4:	03 c0       	rjmp	.+6      	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 4e6:	69 2d       	mov	r22, r9
 4e8:	70 e0       	ldi	r23, 0x00	; 0
 4ea:	02 c0       	rjmp	.+4      	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
 4ec:	6f ef       	ldi	r22, 0xFF	; 255
 4ee:	7f ef       	ldi	r23, 0xFF	; 255
 4f0:	c5 01       	movw	r24, r10
 4f2:	0e 94 bf 03 	call	0x77e	; 0x77e <strnlen>
 4f6:	4c 01       	movw	r8, r24
 4f8:	82 01       	movw	r16, r4
 4fa:	f3 2d       	mov	r31, r3
 4fc:	ff 77       	andi	r31, 0x7F	; 127
 4fe:	3f 2e       	mov	r3, r31
 500:	16 c0       	rjmp	.+44     	; 0x52e <__EEPROM_REGION_LENGTH__+0x12e>
 502:	28 01       	movw	r4, r16
 504:	22 e0       	ldi	r18, 0x02	; 2
 506:	42 0e       	add	r4, r18
 508:	51 1c       	adc	r5, r1
 50a:	f8 01       	movw	r30, r16
 50c:	a0 80       	ld	r10, Z
 50e:	b1 80       	ldd	r11, Z+1	; 0x01
 510:	36 fe       	sbrs	r3, 6
 512:	03 c0       	rjmp	.+6      	; 0x51a <__EEPROM_REGION_LENGTH__+0x11a>
 514:	69 2d       	mov	r22, r9
 516:	70 e0       	ldi	r23, 0x00	; 0
 518:	02 c0       	rjmp	.+4      	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
 51a:	6f ef       	ldi	r22, 0xFF	; 255
 51c:	7f ef       	ldi	r23, 0xFF	; 255
 51e:	c5 01       	movw	r24, r10
 520:	0e 94 b4 03 	call	0x768	; 0x768 <strnlen_P>
 524:	4c 01       	movw	r8, r24
 526:	f3 2d       	mov	r31, r3
 528:	f0 68       	ori	r31, 0x80	; 128
 52a:	3f 2e       	mov	r3, r31
 52c:	82 01       	movw	r16, r4
 52e:	33 fc       	sbrc	r3, 3
 530:	1b c0       	rjmp	.+54     	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 532:	82 2d       	mov	r24, r2
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	88 16       	cp	r8, r24
 538:	99 06       	cpc	r9, r25
 53a:	b0 f4       	brcc	.+44     	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 53c:	b6 01       	movw	r22, r12
 53e:	80 e2       	ldi	r24, 0x20	; 32
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	0e 94 ca 03 	call	0x794	; 0x794 <fputc>
 546:	2a 94       	dec	r2
 548:	f4 cf       	rjmp	.-24     	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
 54a:	f5 01       	movw	r30, r10
 54c:	37 fc       	sbrc	r3, 7
 54e:	85 91       	lpm	r24, Z+
 550:	37 fe       	sbrs	r3, 7
 552:	81 91       	ld	r24, Z+
 554:	5f 01       	movw	r10, r30
 556:	b6 01       	movw	r22, r12
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	0e 94 ca 03 	call	0x794	; 0x794 <fputc>
 55e:	21 10       	cpse	r2, r1
 560:	2a 94       	dec	r2
 562:	21 e0       	ldi	r18, 0x01	; 1
 564:	82 1a       	sub	r8, r18
 566:	91 08       	sbc	r9, r1
 568:	81 14       	cp	r8, r1
 56a:	91 04       	cpc	r9, r1
 56c:	71 f7       	brne	.-36     	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
 56e:	e8 c0       	rjmp	.+464    	; 0x740 <__EEPROM_REGION_LENGTH__+0x340>
 570:	84 36       	cpi	r24, 0x64	; 100
 572:	11 f0       	breq	.+4      	; 0x578 <__EEPROM_REGION_LENGTH__+0x178>
 574:	89 36       	cpi	r24, 0x69	; 105
 576:	41 f5       	brne	.+80     	; 0x5c8 <__EEPROM_REGION_LENGTH__+0x1c8>
 578:	f8 01       	movw	r30, r16
 57a:	37 fe       	sbrs	r3, 7
 57c:	07 c0       	rjmp	.+14     	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 57e:	60 81       	ld	r22, Z
 580:	71 81       	ldd	r23, Z+1	; 0x01
 582:	82 81       	ldd	r24, Z+2	; 0x02
 584:	93 81       	ldd	r25, Z+3	; 0x03
 586:	0c 5f       	subi	r16, 0xFC	; 252
 588:	1f 4f       	sbci	r17, 0xFF	; 255
 58a:	08 c0       	rjmp	.+16     	; 0x59c <__EEPROM_REGION_LENGTH__+0x19c>
 58c:	60 81       	ld	r22, Z
 58e:	71 81       	ldd	r23, Z+1	; 0x01
 590:	07 2e       	mov	r0, r23
 592:	00 0c       	add	r0, r0
 594:	88 0b       	sbc	r24, r24
 596:	99 0b       	sbc	r25, r25
 598:	0e 5f       	subi	r16, 0xFE	; 254
 59a:	1f 4f       	sbci	r17, 0xFF	; 255
 59c:	f3 2d       	mov	r31, r3
 59e:	ff 76       	andi	r31, 0x6F	; 111
 5a0:	3f 2e       	mov	r3, r31
 5a2:	97 ff       	sbrs	r25, 7
 5a4:	09 c0       	rjmp	.+18     	; 0x5b8 <__EEPROM_REGION_LENGTH__+0x1b8>
 5a6:	90 95       	com	r25
 5a8:	80 95       	com	r24
 5aa:	70 95       	com	r23
 5ac:	61 95       	neg	r22
 5ae:	7f 4f       	sbci	r23, 0xFF	; 255
 5b0:	8f 4f       	sbci	r24, 0xFF	; 255
 5b2:	9f 4f       	sbci	r25, 0xFF	; 255
 5b4:	f0 68       	ori	r31, 0x80	; 128
 5b6:	3f 2e       	mov	r3, r31
 5b8:	2a e0       	ldi	r18, 0x0A	; 10
 5ba:	30 e0       	ldi	r19, 0x00	; 0
 5bc:	a3 01       	movw	r20, r6
 5be:	0e 94 06 04 	call	0x80c	; 0x80c <__ultoa_invert>
 5c2:	88 2e       	mov	r8, r24
 5c4:	86 18       	sub	r8, r6
 5c6:	45 c0       	rjmp	.+138    	; 0x652 <__EEPROM_REGION_LENGTH__+0x252>
 5c8:	85 37       	cpi	r24, 0x75	; 117
 5ca:	31 f4       	brne	.+12     	; 0x5d8 <__EEPROM_REGION_LENGTH__+0x1d8>
 5cc:	23 2d       	mov	r18, r3
 5ce:	2f 7e       	andi	r18, 0xEF	; 239
 5d0:	b2 2e       	mov	r11, r18
 5d2:	2a e0       	ldi	r18, 0x0A	; 10
 5d4:	30 e0       	ldi	r19, 0x00	; 0
 5d6:	25 c0       	rjmp	.+74     	; 0x622 <__EEPROM_REGION_LENGTH__+0x222>
 5d8:	93 2d       	mov	r25, r3
 5da:	99 7f       	andi	r25, 0xF9	; 249
 5dc:	b9 2e       	mov	r11, r25
 5de:	8f 36       	cpi	r24, 0x6F	; 111
 5e0:	c1 f0       	breq	.+48     	; 0x612 <__EEPROM_REGION_LENGTH__+0x212>
 5e2:	18 f4       	brcc	.+6      	; 0x5ea <__EEPROM_REGION_LENGTH__+0x1ea>
 5e4:	88 35       	cpi	r24, 0x58	; 88
 5e6:	79 f0       	breq	.+30     	; 0x606 <__EEPROM_REGION_LENGTH__+0x206>
 5e8:	b5 c0       	rjmp	.+362    	; 0x754 <__EEPROM_REGION_LENGTH__+0x354>
 5ea:	80 37       	cpi	r24, 0x70	; 112
 5ec:	19 f0       	breq	.+6      	; 0x5f4 <__EEPROM_REGION_LENGTH__+0x1f4>
 5ee:	88 37       	cpi	r24, 0x78	; 120
 5f0:	21 f0       	breq	.+8      	; 0x5fa <__EEPROM_REGION_LENGTH__+0x1fa>
 5f2:	b0 c0       	rjmp	.+352    	; 0x754 <__EEPROM_REGION_LENGTH__+0x354>
 5f4:	e9 2f       	mov	r30, r25
 5f6:	e0 61       	ori	r30, 0x10	; 16
 5f8:	be 2e       	mov	r11, r30
 5fa:	b4 fe       	sbrs	r11, 4
 5fc:	0d c0       	rjmp	.+26     	; 0x618 <__EEPROM_REGION_LENGTH__+0x218>
 5fe:	fb 2d       	mov	r31, r11
 600:	f4 60       	ori	r31, 0x04	; 4
 602:	bf 2e       	mov	r11, r31
 604:	09 c0       	rjmp	.+18     	; 0x618 <__EEPROM_REGION_LENGTH__+0x218>
 606:	34 fe       	sbrs	r3, 4
 608:	0a c0       	rjmp	.+20     	; 0x61e <__EEPROM_REGION_LENGTH__+0x21e>
 60a:	29 2f       	mov	r18, r25
 60c:	26 60       	ori	r18, 0x06	; 6
 60e:	b2 2e       	mov	r11, r18
 610:	06 c0       	rjmp	.+12     	; 0x61e <__EEPROM_REGION_LENGTH__+0x21e>
 612:	28 e0       	ldi	r18, 0x08	; 8
 614:	30 e0       	ldi	r19, 0x00	; 0
 616:	05 c0       	rjmp	.+10     	; 0x622 <__EEPROM_REGION_LENGTH__+0x222>
 618:	20 e1       	ldi	r18, 0x10	; 16
 61a:	30 e0       	ldi	r19, 0x00	; 0
 61c:	02 c0       	rjmp	.+4      	; 0x622 <__EEPROM_REGION_LENGTH__+0x222>
 61e:	20 e1       	ldi	r18, 0x10	; 16
 620:	32 e0       	ldi	r19, 0x02	; 2
 622:	f8 01       	movw	r30, r16
 624:	b7 fe       	sbrs	r11, 7
 626:	07 c0       	rjmp	.+14     	; 0x636 <__EEPROM_REGION_LENGTH__+0x236>
 628:	60 81       	ld	r22, Z
 62a:	71 81       	ldd	r23, Z+1	; 0x01
 62c:	82 81       	ldd	r24, Z+2	; 0x02
 62e:	93 81       	ldd	r25, Z+3	; 0x03
 630:	0c 5f       	subi	r16, 0xFC	; 252
 632:	1f 4f       	sbci	r17, 0xFF	; 255
 634:	06 c0       	rjmp	.+12     	; 0x642 <__EEPROM_REGION_LENGTH__+0x242>
 636:	60 81       	ld	r22, Z
 638:	71 81       	ldd	r23, Z+1	; 0x01
 63a:	80 e0       	ldi	r24, 0x00	; 0
 63c:	90 e0       	ldi	r25, 0x00	; 0
 63e:	0e 5f       	subi	r16, 0xFE	; 254
 640:	1f 4f       	sbci	r17, 0xFF	; 255
 642:	a3 01       	movw	r20, r6
 644:	0e 94 06 04 	call	0x80c	; 0x80c <__ultoa_invert>
 648:	88 2e       	mov	r8, r24
 64a:	86 18       	sub	r8, r6
 64c:	fb 2d       	mov	r31, r11
 64e:	ff 77       	andi	r31, 0x7F	; 127
 650:	3f 2e       	mov	r3, r31
 652:	36 fe       	sbrs	r3, 6
 654:	0d c0       	rjmp	.+26     	; 0x670 <__EEPROM_REGION_LENGTH__+0x270>
 656:	23 2d       	mov	r18, r3
 658:	2e 7f       	andi	r18, 0xFE	; 254
 65a:	a2 2e       	mov	r10, r18
 65c:	89 14       	cp	r8, r9
 65e:	58 f4       	brcc	.+22     	; 0x676 <__EEPROM_REGION_LENGTH__+0x276>
 660:	34 fe       	sbrs	r3, 4
 662:	0b c0       	rjmp	.+22     	; 0x67a <__EEPROM_REGION_LENGTH__+0x27a>
 664:	32 fc       	sbrc	r3, 2
 666:	09 c0       	rjmp	.+18     	; 0x67a <__EEPROM_REGION_LENGTH__+0x27a>
 668:	83 2d       	mov	r24, r3
 66a:	8e 7e       	andi	r24, 0xEE	; 238
 66c:	a8 2e       	mov	r10, r24
 66e:	05 c0       	rjmp	.+10     	; 0x67a <__EEPROM_REGION_LENGTH__+0x27a>
 670:	b8 2c       	mov	r11, r8
 672:	a3 2c       	mov	r10, r3
 674:	03 c0       	rjmp	.+6      	; 0x67c <__EEPROM_REGION_LENGTH__+0x27c>
 676:	b8 2c       	mov	r11, r8
 678:	01 c0       	rjmp	.+2      	; 0x67c <__EEPROM_REGION_LENGTH__+0x27c>
 67a:	b9 2c       	mov	r11, r9
 67c:	a4 fe       	sbrs	r10, 4
 67e:	0f c0       	rjmp	.+30     	; 0x69e <__EEPROM_REGION_LENGTH__+0x29e>
 680:	fe 01       	movw	r30, r28
 682:	e8 0d       	add	r30, r8
 684:	f1 1d       	adc	r31, r1
 686:	80 81       	ld	r24, Z
 688:	80 33       	cpi	r24, 0x30	; 48
 68a:	21 f4       	brne	.+8      	; 0x694 <__EEPROM_REGION_LENGTH__+0x294>
 68c:	9a 2d       	mov	r25, r10
 68e:	99 7e       	andi	r25, 0xE9	; 233
 690:	a9 2e       	mov	r10, r25
 692:	09 c0       	rjmp	.+18     	; 0x6a6 <__EEPROM_REGION_LENGTH__+0x2a6>
 694:	a2 fe       	sbrs	r10, 2
 696:	06 c0       	rjmp	.+12     	; 0x6a4 <__EEPROM_REGION_LENGTH__+0x2a4>
 698:	b3 94       	inc	r11
 69a:	b3 94       	inc	r11
 69c:	04 c0       	rjmp	.+8      	; 0x6a6 <__EEPROM_REGION_LENGTH__+0x2a6>
 69e:	8a 2d       	mov	r24, r10
 6a0:	86 78       	andi	r24, 0x86	; 134
 6a2:	09 f0       	breq	.+2      	; 0x6a6 <__EEPROM_REGION_LENGTH__+0x2a6>
 6a4:	b3 94       	inc	r11
 6a6:	a3 fc       	sbrc	r10, 3
 6a8:	11 c0       	rjmp	.+34     	; 0x6cc <__EEPROM_REGION_LENGTH__+0x2cc>
 6aa:	a0 fe       	sbrs	r10, 0
 6ac:	06 c0       	rjmp	.+12     	; 0x6ba <__EEPROM_REGION_LENGTH__+0x2ba>
 6ae:	b2 14       	cp	r11, r2
 6b0:	88 f4       	brcc	.+34     	; 0x6d4 <__EEPROM_REGION_LENGTH__+0x2d4>
 6b2:	28 0c       	add	r2, r8
 6b4:	92 2c       	mov	r9, r2
 6b6:	9b 18       	sub	r9, r11
 6b8:	0e c0       	rjmp	.+28     	; 0x6d6 <__EEPROM_REGION_LENGTH__+0x2d6>
 6ba:	b2 14       	cp	r11, r2
 6bc:	60 f4       	brcc	.+24     	; 0x6d6 <__EEPROM_REGION_LENGTH__+0x2d6>
 6be:	b6 01       	movw	r22, r12
 6c0:	80 e2       	ldi	r24, 0x20	; 32
 6c2:	90 e0       	ldi	r25, 0x00	; 0
 6c4:	0e 94 ca 03 	call	0x794	; 0x794 <fputc>
 6c8:	b3 94       	inc	r11
 6ca:	f7 cf       	rjmp	.-18     	; 0x6ba <__EEPROM_REGION_LENGTH__+0x2ba>
 6cc:	b2 14       	cp	r11, r2
 6ce:	18 f4       	brcc	.+6      	; 0x6d6 <__EEPROM_REGION_LENGTH__+0x2d6>
 6d0:	2b 18       	sub	r2, r11
 6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <__EEPROM_REGION_LENGTH__+0x2d8>
 6d4:	98 2c       	mov	r9, r8
 6d6:	21 2c       	mov	r2, r1
 6d8:	a4 fe       	sbrs	r10, 4
 6da:	10 c0       	rjmp	.+32     	; 0x6fc <__EEPROM_REGION_LENGTH__+0x2fc>
 6dc:	b6 01       	movw	r22, r12
 6de:	80 e3       	ldi	r24, 0x30	; 48
 6e0:	90 e0       	ldi	r25, 0x00	; 0
 6e2:	0e 94 ca 03 	call	0x794	; 0x794 <fputc>
 6e6:	a2 fe       	sbrs	r10, 2
 6e8:	17 c0       	rjmp	.+46     	; 0x718 <__EEPROM_REGION_LENGTH__+0x318>
 6ea:	a1 fc       	sbrc	r10, 1
 6ec:	03 c0       	rjmp	.+6      	; 0x6f4 <__EEPROM_REGION_LENGTH__+0x2f4>
 6ee:	88 e7       	ldi	r24, 0x78	; 120
 6f0:	90 e0       	ldi	r25, 0x00	; 0
 6f2:	02 c0       	rjmp	.+4      	; 0x6f8 <__EEPROM_REGION_LENGTH__+0x2f8>
 6f4:	88 e5       	ldi	r24, 0x58	; 88
 6f6:	90 e0       	ldi	r25, 0x00	; 0
 6f8:	b6 01       	movw	r22, r12
 6fa:	0c c0       	rjmp	.+24     	; 0x714 <__EEPROM_REGION_LENGTH__+0x314>
 6fc:	8a 2d       	mov	r24, r10
 6fe:	86 78       	andi	r24, 0x86	; 134
 700:	59 f0       	breq	.+22     	; 0x718 <__EEPROM_REGION_LENGTH__+0x318>
 702:	a1 fe       	sbrs	r10, 1
 704:	02 c0       	rjmp	.+4      	; 0x70a <__EEPROM_REGION_LENGTH__+0x30a>
 706:	8b e2       	ldi	r24, 0x2B	; 43
 708:	01 c0       	rjmp	.+2      	; 0x70c <__EEPROM_REGION_LENGTH__+0x30c>
 70a:	80 e2       	ldi	r24, 0x20	; 32
 70c:	a7 fc       	sbrc	r10, 7
 70e:	8d e2       	ldi	r24, 0x2D	; 45
 710:	b6 01       	movw	r22, r12
 712:	90 e0       	ldi	r25, 0x00	; 0
 714:	0e 94 ca 03 	call	0x794	; 0x794 <fputc>
 718:	89 14       	cp	r8, r9
 71a:	38 f4       	brcc	.+14     	; 0x72a <__EEPROM_REGION_LENGTH__+0x32a>
 71c:	b6 01       	movw	r22, r12
 71e:	80 e3       	ldi	r24, 0x30	; 48
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	0e 94 ca 03 	call	0x794	; 0x794 <fputc>
 726:	9a 94       	dec	r9
 728:	f7 cf       	rjmp	.-18     	; 0x718 <__EEPROM_REGION_LENGTH__+0x318>
 72a:	8a 94       	dec	r8
 72c:	f3 01       	movw	r30, r6
 72e:	e8 0d       	add	r30, r8
 730:	f1 1d       	adc	r31, r1
 732:	80 81       	ld	r24, Z
 734:	b6 01       	movw	r22, r12
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	0e 94 ca 03 	call	0x794	; 0x794 <fputc>
 73c:	81 10       	cpse	r8, r1
 73e:	f5 cf       	rjmp	.-22     	; 0x72a <__EEPROM_REGION_LENGTH__+0x32a>
 740:	22 20       	and	r2, r2
 742:	09 f4       	brne	.+2      	; 0x746 <__EEPROM_REGION_LENGTH__+0x346>
 744:	42 ce       	rjmp	.-892    	; 0x3ca <vfprintf+0x24>
 746:	b6 01       	movw	r22, r12
 748:	80 e2       	ldi	r24, 0x20	; 32
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	0e 94 ca 03 	call	0x794	; 0x794 <fputc>
 750:	2a 94       	dec	r2
 752:	f6 cf       	rjmp	.-20     	; 0x740 <__EEPROM_REGION_LENGTH__+0x340>
 754:	f6 01       	movw	r30, r12
 756:	86 81       	ldd	r24, Z+6	; 0x06
 758:	97 81       	ldd	r25, Z+7	; 0x07
 75a:	02 c0       	rjmp	.+4      	; 0x760 <__EEPROM_REGION_LENGTH__+0x360>
 75c:	8f ef       	ldi	r24, 0xFF	; 255
 75e:	9f ef       	ldi	r25, 0xFF	; 255
 760:	2b 96       	adiw	r28, 0x0b	; 11
 762:	e2 e1       	ldi	r30, 0x12	; 18
 764:	0c 94 80 04 	jmp	0x900	; 0x900 <__epilogue_restores__>

00000768 <strnlen_P>:
 768:	fc 01       	movw	r30, r24
 76a:	05 90       	lpm	r0, Z+
 76c:	61 50       	subi	r22, 0x01	; 1
 76e:	70 40       	sbci	r23, 0x00	; 0
 770:	01 10       	cpse	r0, r1
 772:	d8 f7       	brcc	.-10     	; 0x76a <strnlen_P+0x2>
 774:	80 95       	com	r24
 776:	90 95       	com	r25
 778:	8e 0f       	add	r24, r30
 77a:	9f 1f       	adc	r25, r31
 77c:	08 95       	ret

0000077e <strnlen>:
 77e:	fc 01       	movw	r30, r24
 780:	61 50       	subi	r22, 0x01	; 1
 782:	70 40       	sbci	r23, 0x00	; 0
 784:	01 90       	ld	r0, Z+
 786:	01 10       	cpse	r0, r1
 788:	d8 f7       	brcc	.-10     	; 0x780 <strnlen+0x2>
 78a:	80 95       	com	r24
 78c:	90 95       	com	r25
 78e:	8e 0f       	add	r24, r30
 790:	9f 1f       	adc	r25, r31
 792:	08 95       	ret

00000794 <fputc>:
 794:	0f 93       	push	r16
 796:	1f 93       	push	r17
 798:	cf 93       	push	r28
 79a:	df 93       	push	r29
 79c:	fb 01       	movw	r30, r22
 79e:	23 81       	ldd	r18, Z+3	; 0x03
 7a0:	21 fd       	sbrc	r18, 1
 7a2:	03 c0       	rjmp	.+6      	; 0x7aa <fputc+0x16>
 7a4:	8f ef       	ldi	r24, 0xFF	; 255
 7a6:	9f ef       	ldi	r25, 0xFF	; 255
 7a8:	2c c0       	rjmp	.+88     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 7aa:	22 ff       	sbrs	r18, 2
 7ac:	16 c0       	rjmp	.+44     	; 0x7da <fputc+0x46>
 7ae:	46 81       	ldd	r20, Z+6	; 0x06
 7b0:	57 81       	ldd	r21, Z+7	; 0x07
 7b2:	24 81       	ldd	r18, Z+4	; 0x04
 7b4:	35 81       	ldd	r19, Z+5	; 0x05
 7b6:	42 17       	cp	r20, r18
 7b8:	53 07       	cpc	r21, r19
 7ba:	44 f4       	brge	.+16     	; 0x7cc <fputc+0x38>
 7bc:	a0 81       	ld	r26, Z
 7be:	b1 81       	ldd	r27, Z+1	; 0x01
 7c0:	9d 01       	movw	r18, r26
 7c2:	2f 5f       	subi	r18, 0xFF	; 255
 7c4:	3f 4f       	sbci	r19, 0xFF	; 255
 7c6:	31 83       	std	Z+1, r19	; 0x01
 7c8:	20 83       	st	Z, r18
 7ca:	8c 93       	st	X, r24
 7cc:	26 81       	ldd	r18, Z+6	; 0x06
 7ce:	37 81       	ldd	r19, Z+7	; 0x07
 7d0:	2f 5f       	subi	r18, 0xFF	; 255
 7d2:	3f 4f       	sbci	r19, 0xFF	; 255
 7d4:	37 83       	std	Z+7, r19	; 0x07
 7d6:	26 83       	std	Z+6, r18	; 0x06
 7d8:	14 c0       	rjmp	.+40     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 7da:	8b 01       	movw	r16, r22
 7dc:	ec 01       	movw	r28, r24
 7de:	fb 01       	movw	r30, r22
 7e0:	00 84       	ldd	r0, Z+8	; 0x08
 7e2:	f1 85       	ldd	r31, Z+9	; 0x09
 7e4:	e0 2d       	mov	r30, r0
 7e6:	09 95       	icall
 7e8:	89 2b       	or	r24, r25
 7ea:	e1 f6       	brne	.-72     	; 0x7a4 <fputc+0x10>
 7ec:	d8 01       	movw	r26, r16
 7ee:	16 96       	adiw	r26, 0x06	; 6
 7f0:	8d 91       	ld	r24, X+
 7f2:	9c 91       	ld	r25, X
 7f4:	17 97       	sbiw	r26, 0x07	; 7
 7f6:	01 96       	adiw	r24, 0x01	; 1
 7f8:	17 96       	adiw	r26, 0x07	; 7
 7fa:	9c 93       	st	X, r25
 7fc:	8e 93       	st	-X, r24
 7fe:	16 97       	sbiw	r26, 0x06	; 6
 800:	ce 01       	movw	r24, r28
 802:	df 91       	pop	r29
 804:	cf 91       	pop	r28
 806:	1f 91       	pop	r17
 808:	0f 91       	pop	r16
 80a:	08 95       	ret

0000080c <__ultoa_invert>:
 80c:	fa 01       	movw	r30, r20
 80e:	aa 27       	eor	r26, r26
 810:	28 30       	cpi	r18, 0x08	; 8
 812:	51 f1       	breq	.+84     	; 0x868 <__ultoa_invert+0x5c>
 814:	20 31       	cpi	r18, 0x10	; 16
 816:	81 f1       	breq	.+96     	; 0x878 <__ultoa_invert+0x6c>
 818:	e8 94       	clt
 81a:	6f 93       	push	r22
 81c:	6e 7f       	andi	r22, 0xFE	; 254
 81e:	6e 5f       	subi	r22, 0xFE	; 254
 820:	7f 4f       	sbci	r23, 0xFF	; 255
 822:	8f 4f       	sbci	r24, 0xFF	; 255
 824:	9f 4f       	sbci	r25, 0xFF	; 255
 826:	af 4f       	sbci	r26, 0xFF	; 255
 828:	b1 e0       	ldi	r27, 0x01	; 1
 82a:	3e d0       	rcall	.+124    	; 0x8a8 <__ultoa_invert+0x9c>
 82c:	b4 e0       	ldi	r27, 0x04	; 4
 82e:	3c d0       	rcall	.+120    	; 0x8a8 <__ultoa_invert+0x9c>
 830:	67 0f       	add	r22, r23
 832:	78 1f       	adc	r23, r24
 834:	89 1f       	adc	r24, r25
 836:	9a 1f       	adc	r25, r26
 838:	a1 1d       	adc	r26, r1
 83a:	68 0f       	add	r22, r24
 83c:	79 1f       	adc	r23, r25
 83e:	8a 1f       	adc	r24, r26
 840:	91 1d       	adc	r25, r1
 842:	a1 1d       	adc	r26, r1
 844:	6a 0f       	add	r22, r26
 846:	71 1d       	adc	r23, r1
 848:	81 1d       	adc	r24, r1
 84a:	91 1d       	adc	r25, r1
 84c:	a1 1d       	adc	r26, r1
 84e:	20 d0       	rcall	.+64     	; 0x890 <__ultoa_invert+0x84>
 850:	09 f4       	brne	.+2      	; 0x854 <__ultoa_invert+0x48>
 852:	68 94       	set
 854:	3f 91       	pop	r19
 856:	2a e0       	ldi	r18, 0x0A	; 10
 858:	26 9f       	mul	r18, r22
 85a:	11 24       	eor	r1, r1
 85c:	30 19       	sub	r19, r0
 85e:	30 5d       	subi	r19, 0xD0	; 208
 860:	31 93       	st	Z+, r19
 862:	de f6       	brtc	.-74     	; 0x81a <__ultoa_invert+0xe>
 864:	cf 01       	movw	r24, r30
 866:	08 95       	ret
 868:	46 2f       	mov	r20, r22
 86a:	47 70       	andi	r20, 0x07	; 7
 86c:	40 5d       	subi	r20, 0xD0	; 208
 86e:	41 93       	st	Z+, r20
 870:	b3 e0       	ldi	r27, 0x03	; 3
 872:	0f d0       	rcall	.+30     	; 0x892 <__ultoa_invert+0x86>
 874:	c9 f7       	brne	.-14     	; 0x868 <__ultoa_invert+0x5c>
 876:	f6 cf       	rjmp	.-20     	; 0x864 <__ultoa_invert+0x58>
 878:	46 2f       	mov	r20, r22
 87a:	4f 70       	andi	r20, 0x0F	; 15
 87c:	40 5d       	subi	r20, 0xD0	; 208
 87e:	4a 33       	cpi	r20, 0x3A	; 58
 880:	18 f0       	brcs	.+6      	; 0x888 <__ultoa_invert+0x7c>
 882:	49 5d       	subi	r20, 0xD9	; 217
 884:	31 fd       	sbrc	r19, 1
 886:	40 52       	subi	r20, 0x20	; 32
 888:	41 93       	st	Z+, r20
 88a:	02 d0       	rcall	.+4      	; 0x890 <__ultoa_invert+0x84>
 88c:	a9 f7       	brne	.-22     	; 0x878 <__ultoa_invert+0x6c>
 88e:	ea cf       	rjmp	.-44     	; 0x864 <__ultoa_invert+0x58>
 890:	b4 e0       	ldi	r27, 0x04	; 4
 892:	a6 95       	lsr	r26
 894:	97 95       	ror	r25
 896:	87 95       	ror	r24
 898:	77 95       	ror	r23
 89a:	67 95       	ror	r22
 89c:	ba 95       	dec	r27
 89e:	c9 f7       	brne	.-14     	; 0x892 <__ultoa_invert+0x86>
 8a0:	00 97       	sbiw	r24, 0x00	; 0
 8a2:	61 05       	cpc	r22, r1
 8a4:	71 05       	cpc	r23, r1
 8a6:	08 95       	ret
 8a8:	9b 01       	movw	r18, r22
 8aa:	ac 01       	movw	r20, r24
 8ac:	0a 2e       	mov	r0, r26
 8ae:	06 94       	lsr	r0
 8b0:	57 95       	ror	r21
 8b2:	47 95       	ror	r20
 8b4:	37 95       	ror	r19
 8b6:	27 95       	ror	r18
 8b8:	ba 95       	dec	r27
 8ba:	c9 f7       	brne	.-14     	; 0x8ae <__ultoa_invert+0xa2>
 8bc:	62 0f       	add	r22, r18
 8be:	73 1f       	adc	r23, r19
 8c0:	84 1f       	adc	r24, r20
 8c2:	95 1f       	adc	r25, r21
 8c4:	a0 1d       	adc	r26, r0
 8c6:	08 95       	ret

000008c8 <__prologue_saves__>:
 8c8:	2f 92       	push	r2
 8ca:	3f 92       	push	r3
 8cc:	4f 92       	push	r4
 8ce:	5f 92       	push	r5
 8d0:	6f 92       	push	r6
 8d2:	7f 92       	push	r7
 8d4:	8f 92       	push	r8
 8d6:	9f 92       	push	r9
 8d8:	af 92       	push	r10
 8da:	bf 92       	push	r11
 8dc:	cf 92       	push	r12
 8de:	df 92       	push	r13
 8e0:	ef 92       	push	r14
 8e2:	ff 92       	push	r15
 8e4:	0f 93       	push	r16
 8e6:	1f 93       	push	r17
 8e8:	cf 93       	push	r28
 8ea:	df 93       	push	r29
 8ec:	cd b7       	in	r28, 0x3d	; 61
 8ee:	de b7       	in	r29, 0x3e	; 62
 8f0:	ca 1b       	sub	r28, r26
 8f2:	db 0b       	sbc	r29, r27
 8f4:	0f b6       	in	r0, 0x3f	; 63
 8f6:	f8 94       	cli
 8f8:	de bf       	out	0x3e, r29	; 62
 8fa:	0f be       	out	0x3f, r0	; 63
 8fc:	cd bf       	out	0x3d, r28	; 61
 8fe:	09 94       	ijmp

00000900 <__epilogue_restores__>:
 900:	2a 88       	ldd	r2, Y+18	; 0x12
 902:	39 88       	ldd	r3, Y+17	; 0x11
 904:	48 88       	ldd	r4, Y+16	; 0x10
 906:	5f 84       	ldd	r5, Y+15	; 0x0f
 908:	6e 84       	ldd	r6, Y+14	; 0x0e
 90a:	7d 84       	ldd	r7, Y+13	; 0x0d
 90c:	8c 84       	ldd	r8, Y+12	; 0x0c
 90e:	9b 84       	ldd	r9, Y+11	; 0x0b
 910:	aa 84       	ldd	r10, Y+10	; 0x0a
 912:	b9 84       	ldd	r11, Y+9	; 0x09
 914:	c8 84       	ldd	r12, Y+8	; 0x08
 916:	df 80       	ldd	r13, Y+7	; 0x07
 918:	ee 80       	ldd	r14, Y+6	; 0x06
 91a:	fd 80       	ldd	r15, Y+5	; 0x05
 91c:	0c 81       	ldd	r16, Y+4	; 0x04
 91e:	1b 81       	ldd	r17, Y+3	; 0x03
 920:	aa 81       	ldd	r26, Y+2	; 0x02
 922:	b9 81       	ldd	r27, Y+1	; 0x01
 924:	ce 0f       	add	r28, r30
 926:	d1 1d       	adc	r29, r1
 928:	0f b6       	in	r0, 0x3f	; 63
 92a:	f8 94       	cli
 92c:	de bf       	out	0x3e, r29	; 62
 92e:	0f be       	out	0x3f, r0	; 63
 930:	cd bf       	out	0x3d, r28	; 61
 932:	ed 01       	movw	r28, r26
 934:	08 95       	ret

00000936 <_exit>:
 936:	f8 94       	cli

00000938 <__stop_program>:
 938:	ff cf       	rjmp	.-2      	; 0x938 <__stop_program>
